{"version":3,"file":"InlineDropdown.vue2.js","sources":["../../../../../components/inlineDropdown/InlineDropdown.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"root\"\n    :class=\"[\n      $style.inlineDropdown,\n      $style[size],\n      isExpanded && $style.active,\n      ...computedState,\n    ]\"\n  >\n    <button\n      type=\"button\"\n      :class=\"$style.trigger\"\n      @click=\"toggle\"\n    >\n      <div :class=\"$style.triggerContent\">\n        <slot name=\"trigger\" />\n      </div>\n    </button>\n    <div\n      :style=\"computedContainerStyles\"\n      :class=\"$style.contentContainer\"\n    >\n      <div\n        ref=\"content\"\n        :class=\"$style.content\"\n      >\n        <slot name=\"content\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch } from 'vue';\nimport { compose } from '@terminal/common/utils/fp';\nimport { add } from '@terminal/common/utils/number';\nimport { useEnvironmentObserver } from '@/hooks/useEnvironmentObserver';\nimport { toCssPxValue } from '@/utils/style';\nimport { useComputedState } from '@/hooks/useComputedState';\nimport { getRectField } from '@/utils/dom';\nimport { InlineDropdownProps } from './index';\n\nconst props = withDefaults(\n  defineProps<InlineDropdownProps>(),\n  {\n    gap: 0,\n  },\n);\n\nconst root = ref();\nconst content = ref();\n\nconst computedState = useComputedState(props);\n\nconst computedContainerStyles = ref({\n  height: toCssPxValue(0),\n});\nconst setContainerHeight = (height: number) => {\n  computedContainerStyles.value.height = toCssPxValue(height);\n};\n\nconst setContentHeightToContainerHeight = () => compose(\n  setContainerHeight,\n  add(props.gap),\n  getRectField('height'),\n)(content.value);\n\nconst setContainerHeightToZero = () => setContainerHeight(0);\n\nconst isExpanded = ref(false);\n\nconst toggle = () => {\n  isExpanded.value = !isExpanded.value;\n};\n\nconst calculateContainerHeight = () => (\n  isExpanded.value\n    ? setContentHeightToContainerHeight\n    : setContainerHeightToZero\n)();\n\nwatch(isExpanded, calculateContainerHeight);\nuseEnvironmentObserver(root, calculateContainerHeight);\n</script>\n\n<style lang=\"scss\" module>\n.inlineDropdown {}\n\n.trigger {\n  width: 100%;\n  display: block;\n  position: relative;\n  cursor: pointer;\n  user-select: none;\n}\n\n.triggerContent {\n  position: relative;\n  z-index: 2;\n}\n\n.contentContainer {\n  position: relative;\n  overflow: hidden;\n  transition: height 300ms;\n}\n\n.content {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n}\n\n.lg {\n  .trigger {\n    padding: 25px 40px;\n    border-radius: 10px;\n    &:before {\n      border-radius: 10px;\n    }\n  }\n  .contentContainer {\n    border-radius: 10px;\n  }\n  .content {\n    border-radius: 10px;\n    padding: 25px 40px;\n  }\n}\n\n@keyframes gradientPurpleTriggerOnActiveKeyframes {\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n}\n\n.gradientPurpleTriggerOnActive {\n  .trigger {\n    &:before {\n      content: '';\n      display: block;\n      position: absolute;\n      inset: 0;\n      opacity: 0;\n      transform: scale(0.1, 0.8);\n      transition: transform 200ms, opacity 100ms;\n      background: linear-gradient(\n        90deg,\n        transparent,\n        transparent,\n        #CC42EE,\n        #6271EB,\n        transparent,\n        transparent\n      );\n      background-size: 600% 100%;\n    }\n  }\n  &.active {\n    .trigger {\n      &:before {\n        animation: gradientPurpleTriggerOnActiveKeyframes 26s ease infinite;\n        opacity: 1;\n        transform: scale(1);\n      }\n    }\n  }\n}\n\n@keyframes gradientBlueTriggerOnActiveKeyframes {\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n}\n\n.gradientBlueTriggerOnActive {\n  .trigger {\n    &:before {\n      content: '';\n      display: block;\n      position: absolute;\n      inset: 0;\n      opacity: 0;\n      transform: scale(0.1, 0.8);\n      transition: transform 200ms, opacity 100ms;\n      background: linear-gradient(\n        90deg,\n        transparent,\n        transparent,\n        #42E4EE,\n        #6271EB,\n        transparent,\n        transparent\n      );\n      background-size: 600% 100%;\n    }\n  }\n  &.active {\n    .trigger {\n      &:before {\n        animation: gradientPurpleTriggerOnActiveKeyframes 26s ease infinite;\n        opacity: 1;\n        transform: scale(1);\n      }\n    }\n  }\n}\n\n.background3TriggerColor {\n  .trigger {\n    background-color: rgb(var(--color-background-3));\n  }\n}\n\n.background2BodyColor {\n  .content {\n    background-color: rgb(var(--color-background-2));\n  }\n}\n</style>\n"],"names":["root","ref","content","computedState","useComputedState","props","computedContainerStyles","toCssPxValue","setContainerHeight","height","setContentHeightToContainerHeight","compose","add","getRectField","setContainerHeightToZero","isExpanded","toggle","calculateContainerHeight","watch","useEnvironmentObserver"],"mappings":";;;;;;;;;;;;;;;iBAkDMA,IAAOC,KACPC,IAAUD,KAEVE,IAAgBC,EAAiBC,CAAK,GAEtCC,IAA0BL,EAAI;AAAA,MAClC,QAAQM,EAAa,CAAC;AAAA,IAAA,CACvB,GACKC,IAAqB,CAACC,MAAmB;AACrB,MAAAH,EAAA,MAAM,SAASC,EAAaE,CAAM;AAAA,IAAA,GAGtDC,IAAoC,MAAMC;AAAA,MAC9CH;AAAA,MACAI,EAAIP,EAAM,GAAG;AAAA,MACbQ,EAAa,QAAQ;AAAA,IAAA,EACrBX,EAAQ,KAAK,GAETY,IAA2B,MAAMN,EAAmB,CAAC,GAErDO,IAAad,EAAI,EAAK,GAEtBe,IAAS,MAAM;AACR,MAAAD,EAAA,QAAQ,CAACA,EAAW;AAAA,IAAA,GAG3BE,IAA2B,OAC/BF,EAAW,QACPL,IACAI;AAGN,WAAAI,EAAMH,GAAYE,CAAwB,GAC1CE,EAAuBnB,GAAMiB,CAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}