/*
 * Copyright (C) 2002 - 2023 Devexperts LLC
 * This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
 * If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */
import{Subject as P}from"rxjs";import{ChartBaseElement as E}from"../../chart-base-element";import{CHART_UUID as h,CanvasElement as a}from"../../canvas/canvas-bounds-container";import{DrawerType as S}from"../../drawers/drawing-manager";import{defaultValueFormatter as _}from"../../model/data-series.model";import{SyncedByXScaleModel as I}from"../../model/scale.model";import{uuid as U}from"../../utils";import{cloneUnsafe as B}from"../../utils/object.utils";import{createCandlesOffsetProvider as w,createHighLowOffsetCalculator as D}from"../chart/data-series.high-low-provider";import{GridComponent as H}from"../grid/grid.component";import{BarResizerComponent as b}from"../resizer/bar-resizer.component";import{NumericYAxisLabelsGenerator as x}from"../y_axis/numeric-y-axis-labels.generator";import{YAxisDrawer as N}from"../y_axis/y-axis.drawer";import{YAxisScaleHandler as R}from"../y_axis/y-axis-scale.handler";import{PaneComponent as v,createDefaultPaneHighLowProvider as g}from"./pane.component";import{PaneHitTestController as Y}from"./pane-hit-test.controller";export class PaneManager extends E{constructor(e,n,t,s,r,c,l,o,d,m,u,p,C){super(),this.userInputListenerComponents=e,this.eventBus=n,this.mainScaleModel=t,this.canvasBoundsContainer=s,this.config=r,this.canvasAnimation=c,this.canvasInputListener=l,this.drawingManager=o,this.dataSeriesCanvasModel=d,this.cursorHandler=m,this.crossEventProducer=u,this.chartPanComponent=p,this.mainCanvasModel=C,this.paneComponents={},this.panesChangedSubject=new P,this.hitTestContoller=new Y(this.paneComponents,this.dataSeriesCanvasModel),this.paneComponents[h]=new v(r,n,this.canvasBoundsContainer,h,t,void 0,void 0,void 0,this.hitTestContoller.getNewDataSeriesHitTestId),t.autoScaleModel.setHighLowProvider("series",g(this.paneComponents[h]));const i=D(()=>this.mainScaleModel.getOffsets());t.autoScaleModel.setHighLowPostProcessor("offsets",i),this.canvasBoundsContainer.addPaneBounds(h),this.addResizer(h).activate(),this.addCursors(h),this.addRxSubscription(this.crossEventProducer.subscribeMouseOver(h,[a.PANE_UUID(h)],{extensionY:-this.config.components.paneResizer.dragZone})),this.panesChangedSubject.next(this.paneComponents)}addResizer(e){const n=this.canvasBoundsContainer.getBoundsHitTest(a.PANE_UUID_RESIZER(e),{extensionY:this.config.components.paneResizer.dragZone}),t=()=>{this.canvasBoundsContainer.resizePaneVertically(e,this.canvasInputListener.getCurrentPoint().y),this.eventBus.fireDraw([this.dataSeriesCanvasModel.canvasId,"overDataSeriesCanvas"])},s=a.PANE_UUID_RESIZER(e),r=new b(s,()=>this.canvasBoundsContainer.getBounds(s),n,t,this.chartPanComponent,this.dataSeriesCanvasModel,this.drawingManager,this.canvasInputListener,this.canvasAnimation,this.config,this.canvasBoundsContainer);return this.userInputListenerComponents.push(r),r}createPane(e=U(),n){var t,s,r;if(this.paneComponents[e]!==void 0)return this.paneComponents[e];const c=[],l=()=>this.canvasBoundsContainer.getBounds(a.PANE_UUID(e)),o=(t=n==null?void 0:n.scaleModel)!==null&&t!==void 0?t:new I(this.mainScaleModel,this.config,l,this.canvasAnimation);this.canvasBoundsContainer.addPaneBounds(e,n==null?void 0:n.order),c.push(()=>this.canvasBoundsContainer.removedPaneBounds(e));const d=(s=n==null?void 0:n.paneFormatters)!==null&&s!==void 0?s:{regular:_},[m,u,p]=this.createYAxisComponent(e,o,d.regular,c,(n==null?void 0:n.increment)||null),C=this.createGridComponent(e,o,m);this.createYPanHandler(e,o,c);const i=new v(this.config,this.eventBus,this.canvasBoundsContainer,e,o,m,u,p,this.hitTestContoller,c);i.addChildEntity(o),i.setPaneValueFormatters(d),i.addChildEntity(p),i.addChildEntity(C),this.config.components.paneResizer.visible&&i.addChildEntity(this.addResizer(e)),((r=n==null?void 0:n.useDefaultHighLow)!==null&&r!==void 0?r:!0)&&o.autoScaleModel.setHighLowProvider("default",w(()=>({top:10,bottom:10,left:0,right:0,visible:!0}),g(i))),this.addCursors(e),c.push(()=>this.removeCursors(e));const A=this.crossEventProducer.subscribeMouseOverHT(e,i.ht);return c.push(()=>A.unsubscribe()),this.paneComponents[e]=i,i.activate(),this.recalculateState(),o.autoScale(!0),this.panesChangedSubject.next(this.paneComponents),i}removePane(e){const n=this.paneComponents[e];n!==void 0&&(n.subs.forEach(t=>t()),n.disable(),n.dataSeries.forEach(t=>t.deactivate()),delete this.paneComponents[e],this.recalculateState(),this.panesChangedSubject.next(this.paneComponents))}createYAxisComponent(e,n,t,s,r){const c=new x(r,void 0,n,t,()=>"regular",()=>1),l=new N(this.config,this.config.components.yAxis,this.dataSeriesCanvasModel,()=>c.generateNumericLabels(),()=>this.canvasBoundsContainer.getBounds(a.PANE_UUID_Y_AXIS(e)),()=>this.config.components.yAxis.visible,n.toY.bind(n));this.drawingManager.addDrawerAfter(l,a.PANE_UUID_Y_AXIS(e),S.Y_AXIS),s.push(()=>this.drawingManager.removeDrawerByName(a.PANE_UUID_Y_AXIS(e)));const o=B(this.config.components.yAxis);o.type="regular";const d=new R(this.eventBus,o,this.chartPanComponent,n,this.canvasInputListener,this.canvasBoundsContainer,this.canvasBoundsContainer.getBoundsHitTest(a.PANE_UUID_Y_AXIS(e)),m=>n.autoScale(m));return this.userInputListenerComponents.push(d),[c,l,d]}createYPanHandler(e,n,t){const s=this.chartPanComponent.chartAreaPanHandler.registerChartYPanHandler(n,this.canvasBoundsContainer.getBoundsHitTest(a.PANE_UUID(e)));t.push(()=>{this.chartPanComponent.chartAreaPanHandler.removeChildEntity(s),s.disable()})}createGridComponent(e,n,t){return new H(this.mainCanvasModel,n,this.config,`PANE_${e}_grid_drawer`,this.drawingManager,()=>this.canvasBoundsContainer.getBounds(a.PANE_UUID(e)),()=>this.canvasBoundsContainer.getBounds(a.PANE_UUID(e)),()=>[],()=>t.generateNumericLabels())}addCursors(e,n=this.config.components.chart.cursor){const t=a.PANE_UUID(e),s=a.PANE_UUID_Y_AXIS(e),r=a.PANE_UUID_RESIZER(e);this.cursorHandler.addCursorForCanvasEl(t,n),this.config.components.paneResizer.visible&&this.cursorHandler.addCursorForCanvasEl(r,this.config.components.paneResizer.cursor,this.config.components.paneResizer.dragZone),this.cursorHandler.addCursorForCanvasEl(s,this.config.components.yAxis.cursor)}removeCursors(e){const n=a.PANE_UUID(e),t=a.PANE_UUID_Y_AXIS(e),s=a.PANE_UUID_RESIZER(e);this.cursorHandler.removeCursorForCanvasEl(n),this.cursorHandler.removeCursorForCanvasEl(s),this.cursorHandler.removeCursorForCanvasEl(t)}recalculateState(){Object.values(this.paneComponents).forEach(e=>e.scaleModel.recalculateZoomY()),this.eventBus.fireDraw([this.dataSeriesCanvasModel.canvasId,"overDataSeriesCanvas"])}}
