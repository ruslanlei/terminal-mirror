/*
 * Copyright (C) 2002 - 2023 Devexperts LLC
 * This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
 * If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */
import{avoidAntialiasing as r}from"../../utils/canvas-drawing-functions.utils";import{DEFAULT_PRICE_LABEL_PADDING as l,getLabelYOffset as c}from"../y_axis/y-axis-labels.drawer";export class GridDrawer{constructor(i,e,o,n,t,s,h,a=()=>!0,d){this.canvasModel=i,this.viewportModel=e,this.config=o,this.xBoundsProvider=n,this.yBoundsProvider=t,this.xLabelsProvider=s,this.yLabelsProvider=h,this.drawPredicate=a,this.getBaseLine=d}draw(){if(this.drawPredicate()){const i=this.canvasModel.ctx;r(i,()=>this.drawVertical(i)),r(i,()=>this.drawHorizontal(i)),r(i,()=>this.drawZeroLine(i))}}drawZeroLine(i){if(this.getBaseLine&&this.config.components.yAxis.type==="percent"&&this.config.components.yAxis.zeroPercentLine){const e=this.xBoundsProvider(),o=this.getBaseLine();i.beginPath(),i.strokeStyle=this.config.colors.yAxis.zeroPercentLine,i.setLineDash([]),i.moveTo(e.x,o),i.lineTo(e.x+e.width,o),i.stroke(),i.closePath()}}drawVertical(i){const e=this.xLabelsProvider();if(e.length&&this.config.components.grid.vertical){i.lineWidth=this.config.components.grid.width,i.strokeStyle=this.config.colors.chartAreaTheme.gridColor,i.setLineDash(this.config.components.grid.dash||[]);const o=this.xBoundsProvider(),n=o.x+o.width;for(const t of e){const s=this.viewportModel.toX(t.value);s>o.x&&s<n&&(i.beginPath(),i.moveTo(s,o.y),i.lineTo(s,o.y+o.height),i.stroke())}}}drawHorizontal(i){const e=this.yLabelsProvider();if(e.length&&this.config.components.grid.horizontal){i.lineWidth=this.config.components.grid.width,i.strokeStyle=this.config.colors.chartAreaTheme.gridColor,i.setLineDash(this.config.components.grid.dash||[]);const o=this.yBoundsProvider();for(const n of e){const t=this.viewportModel.toY(n.value),s=c(n.text,i,l);t>o.y+s&&t<o.y+o.height-s&&(i.beginPath(),i.moveTo(o.x,t),i.lineTo(o.x+o.width,t),i.stroke())}}}getCanvasIds(){return[this.canvasModel.canvasId]}}
