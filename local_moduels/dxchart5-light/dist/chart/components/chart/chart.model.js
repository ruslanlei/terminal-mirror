/*
 * Copyright (C) 2002 - 2023 Devexperts LLC
 * This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
 * If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */
import{Subject as m,merge as U}from"rxjs";import{distinctUntilChanged as D}from"rxjs/operators";import{ChartBaseElement as W}from"../../chart-base-element";import{CHART_UUID as C,CanvasElement as S,areBoundsChanged as _}from"../../canvas/canvas-bounds-container";import{getDefaultConfig as V}from"../../chart.config";import{MIN_SUPPORTED_CANVAS_SIZE as b}from"../../drawers/canvas.model";import{CandleSeriesModel as j}from"../../model/candle-series.model";import{copyCandle as L}from"../../model/candle.model";import{candleEdgesConstrait as O}from"../../model/scaling/constrait.functions";import{pixelsToUnits as M}from"../../model/scaling/viewport.model";import{floor as P}from"../../utils";import{autoDetectPeriod as w}from"../../utils/auto-period-detector.utils";import{merge as Y}from"../../utils/merge.utils";import{binarySearch as X,lastOf as I,searchCandleIndex as f}from"../../utils/utils-index";import{createBasicScaleViewportTransformer as R,createTimeFrameViewportTransformer as N}from"./basic-scale";import{calculateCandleWidth as Z}from"./candle-width-calculator.functions";import{deleteCandlesIndex as k,prepareCandle as g,reindexCandles as T}from"./candle.functions";import{ChartInstrument as z}from"./chart.component";import{fakeCandle as v,fakeVisualCandle as H}from"./fake-candles";import{SecondaryChartColorsPool as K}from"./secondary-chart-colors-pool";export class ChartModel extends W{get mainCandleSeries(){return this.candleSeries[0]}get secondaryCandleSeries(){return this.candleSeries.filter(e=>e!==this.mainCandleSeries)}constructor(e,t,i,a,s,l,n,d,r){super(),this.paneManager=e,this.bus=t,this.canvasModel=i,this.config=a,this.scaleModel=s,this.formatterFactory=l,this.mainCanvasParent=n,this.canvasBoundsContainer=d,this.chartResizeHandler=r,this.prevChartWidth=0,this.prevYWidth=0,this.period=0,this.candleSeries=[],this.candlesUpdatedSubject=new m,this.candlesSetSubject=new m,this.candlesPrependSubject=new m,this.nextCandleTimeStampSubject=new m,this.axisTypeSetSubject=new m,this.chartTypeChanged=new m,this.mainInstrumentChangedSubject=new m,this.scaleInversedSubject=new m,this.offsetsChanged=new m,this.candlesTransformersByChartType={},this.lastCandleLabelsByChartType={},this.candleWidthByChartType={},this.lastTimeFrame=[0,0],this.FAKE_CANDLES_DEFAULT=100,this.toY=o=>this.mainCandleSeries.view.toY(o),this.getPeriod=()=>this.period,this.chartTypeChanged.next(this.config.components.chart.type),this.secondaryChartColors=new K(this.config),this.candleSeries[0]=this.createCandleSeriesModel(new z,Object.assign({},this.config.colors)),this.mainCandleSeries.config.type=this.config.components.chart.type,s.addXConstraint((o,c)=>O(c,this.mainCandleSeries.visualPoints,this.config.components.chart.minCandlesOffset,s.getBounds())),this.basicScaleViewportTransformer=R(s),this.timeFrameViewportTransformer=N(s,this),this.pane=this.paneManager.paneComponents[C]}doActivate(){super.doActivate(),this.addRxSubscription(this.canvasBoundsContainer.observeBoundsChanged(S.PANE_UUID(C)).pipe(D(_)).subscribe(e=>{this.handleChartResize(e)})),this.addRxSubscription(this.canvasBoundsContainer.barResizerChangedSubject.subscribe(()=>this.recalculateViewportModelZoomY()))}handleChartResize(e){if(e.width>b.width&&e.height>b.height){const t=this.getEffectiveChartWidth(),i=this.getEffectiveYAxisWidth();if(this.prevChartWidth===0){this.scaleModel.isViewportValid()?this.scaleModel.recalculateZoom():this.doBasicScale(),this.prevChartWidth=t,this.prevYWidth=i;return}if(i!==this.prevYWidth){if(this.config.scale.keepZoomXOnYAxisChange){const s=M(i-this.prevYWidth,this.scaleModel.zoomX);this.scaleModel.setXScale(this.scaleModel.xStart,this.scaleModel.xEnd-s)}else this.scaleModel.recalculateZoomX();this.prevYWidth=i,this.prevChartWidth=t;return}const a=M(t-this.prevChartWidth,this.scaleModel.zoomX);this.scaleModel.setXScale(this.scaleModel.xStart-a,this.scaleModel.xEnd),this.scaleModel.recalculateZoomY(),this.prevYWidth=i,this.prevChartWidth=t}}recalculateViewportModelZoomY(){this.scaleModel.recalculateZoomY(),this.scaleModel.fireChanged(),this.bus.fireDraw([this.canvasModel.canvasId])}setMainCandleSeries(e,t){this.mainCandleSeries.instrument=t,this.setAllSeries({candles:e,instrument:t},this.getSecondarySeries().map(i=>{const a=i.dataPoints;return k(a),{candles:a,instrument:i.instrument}}))}setSecondaryCandleSeries(e,t=this.mainCandleSeries.instrument,i=!0){const a=y(e.map(g)),s=this.reindexCandlesBasedOnSeries(this.mainCandleSeries.dataPoints,a),l=this.secondarySeriesAdjustments(this.mainCandleSeries.dataPoints,s),d=this.secondaryCandleSeries.some(r=>r.instrument.symbol===t.symbol)?this.secondaryCandleSeries.find(r=>r.instrument.symbol===t.symbol):this.createSecondaryCandleSeriesModel(t);if(!!d)return d.dataPoints=l,i&&(this.scaleModel.doAutoScale(),d.recalculateVisualPoints(),this.candlesSetSubject.next(),this.bus.fireDraw([this.canvasModel.canvasId])),d}setAllSeries(e,t){var i;this.mainCandleSeries.instrument=(i=e.instrument)!==null&&i!==void 0?i:this.mainCandleSeries.instrument,e.instrument&&this.mainInstrumentChangedSubject.next(e.instrument),this.rememberCurrentTimeframe();const a=y(e.candles.map(g));this.mainCandleSeries.clearData(),T(a),this.mainCandleSeries.dataPoints=a,this.secondaryCandleSeries.filter(s=>t.filter(l=>{var n;return((n=l.instrument)===null||n===void 0?void 0:n.symbol)===s.instrument.symbol}).length===0).forEach(s=>this.removeSecondaryCandleSeries(s)),t.map(s=>this.setSecondaryCandleSeries(s.candles,s.instrument,!1)),this.candleSeries.forEach(s=>{s.recalculateDataViewportIndexes(),s.recalculateVisualPoints()}),this.recalculatePeriod(),this.autoScaleOnCandles(),this.scaleModel.doAutoScale(),this.candlesSetSubject.next(),this.bus.fireDraw([this.canvasModel.canvasId])}recalculatePeriod(){const e=w(this.mainCandleSeries.dataPoints);e&&(this.period=e)}autoScaleOnCandles(){this.scaleModel.state.autoScaleOnCandles&&(this.doBasicScale(),this.scaleModel.autoScale(!0))}doBasicScale(){this.basicScaleViewportTransformer(this.mainCandleSeries.visualPoints),this.bus.fireDraw()}doPreviousTimeFrameScale(e=null){this.timeFrameViewportTransformer(this.lastTimeFrame,e),this.scaleModel.state.autoScaleOnCandles&&this.scaleModel.doAutoScale(!0),this.bus.fireDraw()}rememberCurrentTimeframe(){this.mainCandleSeries.visualPoints.length!==0&&(this.lastTimeFrame=[this.candleFromX(this.scaleModel.toX(this.scaleModel.xStart),!0).timestamp,this.candleFromX(this.scaleModel.toX(this.scaleModel.xEnd),!0).timestamp])}updateAllSeries(e,t){const i=[e,...t];if(!this.candleSeries.every(d=>i.find(r=>{var o;return((o=r.instrument)===null||o===void 0?void 0:o.symbol)===d.instrument.symbol}))||t.length!==this.secondaryCandleSeries.length){console.error("All series update failed. Instruments for series are different.");return}const a=y(e.candles.map(g)),s=F(this.mainCandleSeries.dataPoints,a),l=s.candles;T(l),this.mainCandleSeries.dataPoints=l,t.map(d=>{var r,o,c,p;const u=y(d.candles.map(g)),x=F((p=(c=this.findSecondarySeriesBySymbol((o=(r=d.instrument)===null||r===void 0?void 0:r.symbol)!==null&&o!==void 0?o:""))===null||c===void 0?void 0:c.dataPoints)!==null&&p!==void 0?p:[],u).candles;return this.setSecondaryCandleSeries(x,d.instrument,!1)}),this.candleSeries.forEach(d=>{d.recalculateVisualPoints(),d.recalculateDataViewportIndexes()}),this.scaleModel.moveXStart(this.scaleModel.xStart+s.prepended),this.candlesPrependSubject.next(s.prepended);const n=w(this.mainCandleSeries.dataPoints);n&&(this.period=n),this.candlesUpdatedSubject.next(),this.bus.fireDraw()}createSecondaryCandleSeriesModel(e){const t=Object.assign(Object.assign({},this.config.colors),this.secondaryChartColors.takeColorFromPool(e.symbol));return this.createCandleSeriesModel(e,t)}createCandleSeriesModel(e,t){const i=new j(this.paneManager.paneComponents[C],this.paneManager.hitTestContoller.getNewDataSeriesHitTestId(),this.bus,this.scaleModel,e,this.candlesTransformersByChartType,this.candleWidthByChartType,t);return i.config.type="line",this.candleSeries.push(i),i}removeSecondaryCandleSeries(e){return this.secondaryChartColors.addColorToPool(e.instrument.symbol),this.candleSeries=this.candleSeries.filter(t=>t!==e),e.deactivate(),this.paneManager.paneComponents[C].removeDataSeries(e),this.scaleModel.doAutoScale(),e.colors}secondarySeriesAdjustments(e,t){const i=[];return e.forEach(a=>{var s;const l=(s=a.idx)!==null&&s!==void 0?s:0,n=t[l];if(n)i.push(n);else{let d=E(t,l,-1);if(d||(d=E(t,l,1)),d){const r=L(d,l,!0);i.push(r)}}}),i}updateSecondaryCandleSeriesConfig(e,t,i){const a=Y(e,V().colors);this.secondaryChartColors.updateColorConfig(t,a);const s=this.findSecondarySeriesBySymbol(t);s&&(s.config.type=i,s.updateCandleSeriesColors(a),this.bus.fireDraw([this.canvasModel.canvasId])),this.bus.fireDraw([this.canvasModel.canvasId])}setAutoScale(e){this.scaleModel.autoScale(e)}getEffectiveYAxisWidth(){return this.canvasBoundsContainer.getBounds(S.PANE_UUID_Y_AXIS(C)).width}getEffectiveChartWidth(){return this.canvasBoundsContainer.getBounds(S.PANE_UUID(C)).width}getEffectiveChartHeight(){return this.canvasBoundsContainer.getBounds(S.PANE_UUID(C)).height}setOffsets(e){this.scaleModel.updateOffsets(e);const t=this.getCandlesCountWithRightOffset(),i=this.mainCandleSeries.visualPoints;this.hasCandles()&&t>=i.length&&this.scaleModel.setXScale(this.scaleModel.xStart,this.candleFromIdx(t).startUnit),this.offsetsChanged.next(),this.bus.fireDraw()}getOffsets(){return this.scaleModel.getOffsets()}fromY(e){return this.scaleModel.fromY(e)}priceFromY(e,t){return(t!=null?t:this.mainCandleSeries).view.priceFromY(e)}toX(e){const t=this.candleFromIdx(e);return this.scaleModel.toX(t.centerUnit)}getBaseLine(){return this.mainCandleSeries.getBaseLine()}candleFromX(e,t=!1,i=this.mainCandleSeries){const a=this.scaleModel.fromX(e);return this.candleFromUnit(a,t,i)}candleFromUnit(e,t=!1,i=this.mainCandleSeries){var a,s;const l=X(i.visualPoints,e,c=>c.startUnit),n=i.visualPoints,d=this.getLastVisualCandle();n[l.index]!==void 0&&(e<0||d&&e>d.startUnit+d.width)&&(l.index+=P((e-n[l.index].centerUnit)/this.mainCandleSeries.meanCandleWidth));const r=l.index,o=Math.max(Math.min(n.length-1,r),0);return(r<0||r>=n.length)&&t?v(this.mainCandleSeries.dataPoints,r,this.getPeriod()):(s=(a=n[o])===null||a===void 0?void 0:a.candle)!==null&&s!==void 0?s:v(this.mainCandleSeries.dataPoints,o,this.getPeriod())}candleFromTimestamp(e,t=!0){const i=f(e,t,this.mainCandleSeries.dataPoints,this.getPeriod());return this.candleFromIdx(i.index)}candleFromIdx(e){const t=this.mainCandleSeries.visualPoints[e];return t||H(this.mainCandleSeries,e,this.getPeriod())}isReady(){return this.canvasModel.isReady()&&this.hasCandles()}registerCandlesTransformer(e,t){this.candlesTransformersByChartType[e]=t}registerCandlesWidthCalculator(e,t){this.candleWidthByChartType[e]=t}registerLastCandleLabelHandler(e,t){this.lastCandleLabelsByChartType[e]=t}hasCandles(){return this.mainCandleSeries.visualPoints.length!==0}getVisualCandle(e){var t,i,a;const s=e-((a=(i=(t=this.mainCandleSeries.visualPoints[0])===null||t===void 0?void 0:t.candle)===null||i===void 0?void 0:i.idx)!==null&&a!==void 0?a:0);return this.mainCandleSeries.visualPoints[s]}getFirstIdx(){return this.mainCandleSeries.dataIdxStart}getLastIdx(){return this.mainCandleSeries.dataIdxEnd}getFirstTimestamp(e=!0){return e?this.candleFromIdx(this.getFirstIdx()).candle.timestamp:this.candleFromUnit(this.scaleModel.xStart,!0).timestamp}getLastTimestamp(e=!0){return e?this.candleFromIdx(this.getLastIdx()).candle.timestamp:this.candleFromUnit(this.scaleModel.xEnd,!0).timestamp}setTimestampRange(e,t){const i=this.candleFromTimestamp(e).startUnit,a=this.candleFromTimestamp(t),s=a.startUnit+a.width;return this.scaleModel.setXScale(i,s)}getLastCandle(){const e=this.mainCandleSeries.dataPoints;return I(e)}getLastVisualCandle(){const e=this.mainCandleSeries.visualPoints;return I(e)}getMaxCandlesFitLength(){return P(this.getEffectiveChartWidth()/this.config.components.chart.minWidth)}getSecondarySeries(){return this.secondaryCandleSeries}isSeriesInstrument(e,t){return e.instrument.symbol===t}findSeriesBySymbol(e){return this.candleSeries.filter(t=>this.isSeriesInstrument(t,e))}findSecondarySeriesBySymbol(e){return this.secondaryCandleSeries.find(t=>this.isSeriesInstrument(t,e))}reindexCandlesBasedOnSeries(e,t){const i=this.getPeriod();return t.reduce((a,s)=>{const l=s.timestamp,n=f(l,!1,e,i);return n.index>=0&&n.index<e.length&&(s.idx=n.index,a[n.index]=s),a},[])}isCandleInViewport(e){return this.getFirstIdx()<=e&&e<=this.getLastIdx()}updateCandles(e,t=this.mainCandleSeries.instrument.symbol){const i=this.mainCandleSeries.instrument.symbol===t,a=this.findSeriesBySymbol(t);if(a.length===0){console.warn("updateCandles failed. Can't find series",t);return}a.forEach(s=>{const l=s.dataPoints;let n=!1,d=!1,r;e.forEach(o=>{var c;if(!o)return;const p=f(o.timestamp,!0,l,this.getPeriod()),u=Math.min(p.index,l.length);n=n||u===l.length,l[u]=o,o.idx=u,s.dataPoints=l,s.recalculateDataViewportIndexes(),d=d||this.isCandleInViewport(u);const x=u>=l.length-1,B=r&&o.timestamp<r.timestamp;if(x&&!B&&(r=o),n&&r&&i&&d){const A=(c=this.candleWidthByChartType[this.config.components.chart.type])!==null&&c!==void 0?c:Z;this.scaleModel.moveXStart(this.scaleModel.xStart+A(r))}}),r&&s.updateCurrentPrice(r.close),d&&r&&e.length===1?this.bus.fireDraw([this.canvasModel.canvasId]):s.recalculateVisualPoints()}),this.scaleModel.doAutoScale(),this.candlesUpdatedSubject.next()}observeCandlesChanged(){return U(this.candlesSetSubject,this.candlesUpdatedSubject)}getCandles(){return this.mainCandleSeries.dataPoints}getCandlesWithFake(e=0,t){let i=this.getCandles().slice();const a=this.getCandlesCount(),s=t!=null?t:a+this.FAKE_CANDLES_DEFAULT;i=i.slice(Math.max(0,e),Math.min(a,s));const l=[],n=[];for(let r=a;r<s;r++)l.push(v(this.mainCandleSeries.dataPoints,r,this.getPeriod()));const d=Math.min(0,s);for(let r=e;r<d;r++)n.push(v(this.mainCandleSeries.dataPoints,r,this.getPeriod()));return[...n,...i,...l]}getCandlesCount(){return this.mainCandleSeries.dataPoints.length}getCandlesCountWithRightOffset(){return this.getCandlesCount()+this.getOffsets().right}clearData(){this.candleSeries.forEach(e=>e.clearData())}prependCandles(e,t){const i=e.slice(),a=[];return t.forEach(s=>{const n=f(s.timestamp,!1,e).index;n<0?a.push(s):e[n].timestamp===s.timestamp?i[n]=s:console.warn(`Couldn't update candle with timestamp ${s.timestamp}`)}),{prepended:a.length,candles:[...a,...i]}}addLastCandle(e,t=this.mainCandleSeries.instrument.symbol){this.updateCandles([e],t)}updateLastCandle(e,t=this.mainCandleSeries.instrument.symbol){this.updateCandles([e],t)}}const y=h=>h.slice().sort((e,t)=>e.timestamp===t.timestamp?0:e.timestamp>t.timestamp?1:-1),E=(h,e,t)=>{if(e>=h.length)return h[h.length-1];for(let i=e;i<h.length&&i>=0;i+=t){const a=h[i];if(a)return a}},F=(h,e)=>{const t=h.slice(),i=[],a=[];return e.forEach(s=>{const n=f(s.timestamp,!1,h).index;n<0?i.push(s):n>=h.length?a.push(s):h[n].timestamp===s.timestamp?t[n]=s:console.warn(`Couldn't update candle with timestamp ${s.timestamp}`)}),{prepended:i.length,appended:a.length,candles:[...i,...t,...a]}};
