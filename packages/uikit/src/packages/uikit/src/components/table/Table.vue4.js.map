{"version":3,"file":"Table.vue4.js","sources":["../../../../../components/table/Table.vue"],"sourcesContent":["<template>\n  <table\n    :class=\"[\n      $style.table,\n      isRowsClickable && $style.rowsClickable,\n      ...computedState,\n    ]\"\n  >\n    <transition\n      mode=\"out-in\"\n      name=\"skeletonTransition\"\n    >\n      <template v-if=\"computedRecords.length\">\n        <div :class=\"$style.tableContent\">\n          <div\n            v-if=\"isHeadVisible\"\n            :style=\"computedRowStyles\"\n            :class=\"$style.head\"\n          >\n            <button\n              v-for=\"column in columns\"\n              :key=\"column.slug\"\n              type=\"button\"\n              :class=\"[\n                $style.column,\n                $style[column.align],\n                (column.sortable || column.isSelect) && $style.clickable,\n              ]\"\n              @click=\"onColumnClick(column)\"\n            >\n              <slot\n                :name=\"`column(${column.slug})`\"\n                :column=\"column\"\n                :data=\"column.data\"\n                :label=\"column.label\"\n                :slug=\"column.slug\"\n                :is-all-records-selected=\"isAllRecordsSelected\"\n                :is-sorted-by=\"sortBy === column.slug\"\n                :sort-direction=\"sortDirection\"\n                :is-sorted-asc=\"sortBy === column.slug && sortDirection === 'asc'\"\n                :is-sorted-desc=\"sortBy === column.slug && sortDirection === 'desc'\"\n              >\n                {{ column.label }}\n              </slot>\n            </button>\n          </div>\n          <transition-group\n            tag=\"div\"\n            :class=\"$style.records\"\n            name=\"tableElementAppearance\"\n            @before-leave=\"onElementRemove\"\n          >\n            <tr\n              v-for=\"record in computedRecords\"\n              :key=\"record.id\"\n              :class=\"$style.tableRowContainer\"\n              :data-table-element-id=\"tableId\"\n            >\n              <TableRow\n                :grid-columns=\"computedListColumns\"\n                :record=\"record\"\n                :columns=\"columns\"\n                :state=\"[\n                  ...state,\n                  ...(record?.state\n                    ? record.state\n                    : []),\n                ]\"\n                :class=\"$style.tableRow\"\n                @click=\"onRowClick(record)\"\n              >\n                <template #default=\"{ toggleChildren }\">\n                  <button\n                    v-for=\"column in columns\"\n                    :key=\"column.slug\"\n                    type=\"button\"\n                    :class=\"[\n                      $style.recordColumn,\n                      $style[column.align],\n                    ]\"\n                    @click=\"onCellClick($event, column, record, toggleChildren)\"\n                  >\n                    <slot\n                      :name=\"`cell(${column.slug})`\"\n                      :record=\"record\"\n                      :data=\"record.data[column.slug]\"\n                      :is-selected=\"record.isSelected\"\n                    />\n                  </button>\n                </template>\n                <template\n                  v-if=\"record.children && 'recordChildren' in $slots\"\n                  #children=\"{ data }\"\n                >\n                  <slot\n                    name=\"recordChildren\"\n                    :children=\"data\"\n                  />\n                </template>\n              </TableRow>\n            </tr>\n          </transition-group>\n        </div>\n      </template>\n      <template v-else>\n        <div :class=\"$style.placeholder\">\n          <slot name=\"placeholder\" />\n        </div>\n      </template>\n    </transition>\n  </table>\n</template>\n\n<script setup lang=\"ts\">\nimport {\n  ref,\n  computed,\n  onMounted,\n} from 'vue';\nimport anime from 'animejs';\nimport { uuid } from '@terminal/common/utils/uuid';\nimport { compose } from '@terminal/common/utils/fp';\nimport { awaitTimeout } from '@terminal/common/utils/promise';\nimport { filter, forEach } from '@terminal/common/utils/array';\nimport { useTable } from '@/hooks/useTable';\nimport TableRow from '@/components/table/tableRow/TableRow.vue';\nimport { useComputedState } from '@/hooks/useComputedState';\nimport { playAnimation } from '@/utils/animation';\nimport {\n  toCssPxValue,\n} from '@/utils/style';\nimport {\n  addCssProperty, arrayOfElements, getRect, removeCssProperty,\n} from '@/utils/dom';\nimport {\n  TableRecord,\n  TableProps,\n  TableColumn,\n  SelectedRecords,\n} from './index';\n\nconst props = withDefaults(\n  defineProps<TableProps>(),\n  {\n    isHeadVisible: true,\n    showHeadWhileEmpty: false,\n    appearanceAnimationType: 'elevating',\n    animationDelay: 0,\n  },\n);\nconst emit = defineEmits<{(e: 'update:selectedRecords', value: SelectedRecords): void,\n  (e: 'record-click', value: TableRecord['id']): void,\n}>();\n\nconst computedListColumns = computed(() => props.columns.reduce(\n  (acc: string, column: TableColumn) => {\n    const columnSize = typeof column.size === 'string'\n      ? column.size\n      : `${column.size}fr`;\n\n    return `${acc} ${columnSize}`;\n  },\n  '',\n));\nconst computedRowStyles = computed(() => ({\n  gridTemplateColumns: computedListColumns.value,\n}));\n\nconst computedState = useComputedState(props);\n\nconst {\n  isAllRecordsSelected,\n  onColumnClick,\n  onCellClick,\n  computedRecords,\n  onRowClick,\n} = useTable(props, emit);\n\nconst tableId = ref(uuid());\n\nconst computedTableRowSelector = computed(\n  () => `[data-table-element-id=\"${tableId.value}\"]`,\n);\n\nconst onElementRemove = (removingElement: HTMLElement) => {\n  // add exact height to make element\n  // animate it on remove animation.\n\n  const {\n    height,\n  } = getRect(removingElement);\n\n  compose(\n    addCssProperty(['zIndex', 1]),\n    addCssProperty(['height', toCssPxValue(height)]),\n  )(removingElement);\n};\n\nconst playAppearAnimation = async () => {\n  const onAnimationComplete = () => {\n    anime.remove(computedTableRowSelector.value);\n\n    compose(\n      removeCssProperty(['opacity', 'transform']),\n      arrayOfElements,\n    )(computedTableRowSelector.value);\n  };\n\n  // @ts-ignore\n  const visibleTargets = compose(\n    filter((element: HTMLElement) => {\n      if (!element.offsetParent) return false;\n\n      const {\n        height: containerHeight,\n      } = getRect(element.offsetParent as HTMLElement);\n\n      const {\n        top: elementTop,\n      } = getRect(element);\n\n      // elements that not hidden by parent or window\n      return (element.offsetTop < containerHeight) && (elementTop < window.innerHeight);\n    }),\n    arrayOfElements,\n  )(computedTableRowSelector.value) as HTMLElement[];\n\n  forEach((element: HTMLElement) => {\n    element.style.opacity = '0';\n  }, visibleTargets);\n\n  if (props.animationDelay) {\n    await awaitTimeout(props.animationDelay);\n  }\n\n  await playAnimation({\n    targets: visibleTargets,\n    translateY: [200, 0],\n    opacity: {\n      value: [0, 1],\n      delay: 100,\n    },\n    ...(props.appearanceAnimationType === 'bubbling' ? {\n      scale: [0, 1],\n    } : {}),\n    duration: 700,\n    easing: 'easeOutQuint',\n    delay: anime.stagger(40, { from: 'first' }),\n    loopComplete: onAnimationComplete,\n  });\n};\n\nonMounted(() => {\n  playAppearAnimation();\n});\n</script>\n\n<style lang=\"scss\" module>\n@import \"src/assets/styles/utils\";\n\n// default state\n.table {\n  color: white;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  .head {\n    display: grid;\n    position: relative;\n    z-index: 2;\n  }\n  .records {\n    width: 100%;\n    flex-grow: 1;\n  }\n  &.rowsClickable {\n    .records {\n      cursor: pointer;\n    }\n  }\n  .record {\n    display: grid;\n    &.selected {}\n    .recordColumn {}\n  }\n  .column {\n    &.clickable {\n      cursor: pointer;\n      user-select: none;\n    }\n  }\n  .column, .recordColumn {\n    display: flex;\n    align-items: center;\n    &.center {\n      justify-content: center;\n    }\n    &.left {\n      justify-content: flex-start;\n    }\n    &.right {\n      justify-content: flex-end;\n    }\n  }\n}\n\n.tableContent {\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n}\n\n.placeholder {\n  width: 100%;\n  flex-grow: 1;\n  display: flex;\n  & > * {\n    width: 100%;\n    flex-grow: 1;\n  }\n}\n\n.tableRow {\n  width: 100%;\n}\n\n.tableRowContainer {\n  width: 100%;\n  z-index: 2;\n  display: flex;\n  align-items: center;\n  position: relative;\n  //opacity: 0;\n}\n\n.recordColumn {}\n\n.row {\n  display: block;\n}\n\n// states\n.scrollable {\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  overflow-y: auto;\n  @include scrollbarPrimary();\n  .head {\n    position: sticky;\n    top: 0;\n    z-index: 3;\n  }\n  .records {\n    flex-grow: 1;\n  }\n}\n\n.defaultSize {\n  border-radius: 10px;\n  .head {\n    padding: 15px 20px;\n    border-radius: 5px;\n    @include title3;\n    font-weight: 400;\n  }\n  .column {\n    @include title2;\n    font-weight: 600;\n  }\n  .records {\n    padding: 14px 0;\n  }\n}\n\n.smSize {\n  border-radius: 10px;\n  .head {\n    padding: 10px;\n    border-radius: 5px;\n    @include title3;\n    font-weight: 400;\n  }\n  .records {\n    padding: 0;\n  }\n}\n\n.tinySize {\n  .head {\n    padding: 4px 0;\n  }\n  &.scrollable {\n    @include scrollbarPrimary(4px, 2px);\n    padding-right: 18px;\n  }\n  .column {\n    @include title4;\n    font-weight: 600;\n  }\n  .records {\n    margin-top: 10px;\n  }\n}\n\n.secondaryColor3 {\n  background-color: rgb(var(--color-background-3));\n  .head {\n    background-color: rgb(var(--color-background-3));\n  }\n}\n\n.orderListColor {\n  .head {\n    background-color: rgb(var(--color-background-2));\n  }\n}\n</style>\n\n<style lang=\"scss\">\n@import \"src/assets/styles\";\n\n.tableElementAppearance {\n  &-enter-active,\n  &-leave-active {\n    transition: opacity 270ms, transform 300ms, height 300ms;\n  }\n  &-enter-from,\n  &-leave-to {\n    opacity: 0;\n    transform: scale(0.9) translateY(-42px);\n    height: 0 !important;\n  }\n}\n</style>\n"],"names":["computedListColumns","computed","props","acc","column","columnSize","computedRowStyles","computedState","useComputedState","isAllRecordsSelected","onColumnClick","onCellClick","computedRecords","onRowClick","useTable","emit","tableId","ref","uuid","computedTableRowSelector","onElementRemove","removingElement","height","getRect","compose","addCssProperty","toCssPxValue","playAppearAnimation","onAnimationComplete","anime","removeCssProperty","arrayOfElements","visibleTargets","filter","element","containerHeight","elementTop","forEach","awaitTimeout","playAnimation","onMounted"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBA0JMA,IAAsBC,EAAS,MAAMC,EAAM,QAAQ;AAAA,MACvD,CAACC,GAAaC,MAAwB;AAC9B,cAAAC,IAAa,OAAOD,EAAO,QAAS,WACtCA,EAAO,OACP,GAAGA,EAAO;AAEd,eAAO,GAAGD,KAAOE;AAAA,MACnB;AAAA,MACA;AAAA,IAAA,CACD,GACKC,IAAoBL,EAAS,OAAO;AAAA,MACxC,qBAAqBD,EAAoB;AAAA,IACzC,EAAA,GAEIO,IAAgBC,EAAiBN,CAAK,GAEtC;AAAA,MACJ,sBAAAO;AAAA,MACA,eAAAC;AAAA,MACA,aAAAC;AAAA,MACA,iBAAAC;AAAA,MACA,YAAAC;AAAA,IAAA,IACEC,EAASZ,GAAOa,CAAI,GAElBC,IAAUC,EAAIC,EAAA,CAAM,GAEpBC,IAA2BlB;AAAA,MAC/B,MAAM,2BAA2Be,EAAQ;AAAA,IAAA,GAGrCI,IAAkB,CAACC,MAAiC;AAIlD,YAAA;AAAA,QACJ,QAAAC;AAAA,MAAA,IACEC,EAAQF,CAAe;AAE3B,MAAAG;AAAA,QACEC,EAAe,CAAC,UAAU,CAAC,CAAC;AAAA,QAC5BA,EAAe,CAAC,UAAUC,GAAaJ,CAAM,CAAC,CAAC;AAAA,QAC/CD,CAAe;AAAA,IAAA,GAGbM,IAAsB,YAAY;AACtC,YAAMC,IAAsB,MAAM;AAC1B,QAAAC,EAAA,OAAOV,EAAyB,KAAK,GAE3CK;AAAA,UACEM,GAAkB,CAAC,WAAW,WAAW,CAAC;AAAA,UAC1CC;AAAA,QAAA,EACAZ,EAAyB,KAAK;AAAA,MAAA,GAI5Ba,IAAiBR;AAAA,QACrBS,EAAO,CAACC,MAAyB;AAC/B,cAAI,CAACA,EAAQ;AAAqB,mBAAA;AAE5B,gBAAA;AAAA,YACJ,QAAQC;AAAA,UAAA,IACNZ,EAAQW,EAAQ,YAA2B,GAEzC;AAAA,YACJ,KAAKE;AAAA,UAAA,IACHb,EAAQW,CAAO;AAGnB,iBAAQA,EAAQ,YAAYC,KAAqBC,IAAa,OAAO;AAAA,QAAA,CACtE;AAAA,QACDL;AAAA,MAAA,EACAZ,EAAyB,KAAK;AAEhC,MAAAkB,EAAQ,CAACH,MAAyB;AAChC,QAAAA,EAAQ,MAAM,UAAU;AAAA,SACvBF,CAAc,GAEb9B,EAAM,kBACF,MAAAoC,EAAapC,EAAM,cAAc,GAGzC,MAAMqC,EAAc;AAAA,QAClB,SAASP;AAAA,QACT,YAAY,CAAC,KAAK,CAAC;AAAA,QACnB,SAAS;AAAA,UACP,OAAO,CAAC,GAAG,CAAC;AAAA,UACZ,OAAO;AAAA,QACT;AAAA,QACA,GAAI9B,EAAM,4BAA4B,aAAa;AAAA,UACjD,OAAO,CAAC,GAAG,CAAC;AAAA,QAAA,IACV,CAAC;AAAA,QACL,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,OAAO2B,EAAM,QAAQ,IAAI,EAAE,MAAM,SAAS;AAAA,QAC1C,cAAcD;AAAA,MAAA,CACf;AAAA,IAAA;AAGH,WAAAY,EAAU,MAAM;AACM,MAAAb;IAAA,CACrB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}