/*
 * Copyright (C) 2002 - 2023 Devexperts LLC
 * This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
 * If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */
import{findHeightParent as o}from"../utils";export const MIN_SUPPORTED_CANVAS_SIZE={width:20,height:20};export class CanvasModel{constructor(t,e,i,s,h,r={}){var d;this.eventBus=t,this.canvas=e,this.drawingManager=i,this.resizer=h,this.width=0,this.height=0,this.prevHeight=0,this.prevWidth=0,this.type=l,s.push(this),this.parent=o(e);const a=e.getContext("2d",r);if(a===null)throw new Error("Couldn't get 2d context????");this.context=a,this._canvasId=(d=e.getAttribute("data-element"))!==null&&d!==void 0?d:"",this.updateCanvasWidthHeight(e,this.getChartResizerElement().getBoundingClientRect())}updateDPR(t){var e;const{width:i,height:s}=t,h=(e=window.devicePixelRatio)!==null&&e!==void 0?e:1;this.canvas.style.height=s+"px",this.canvas.style.width=i+"px",this.canvas.width=i*h,this.canvas.height=s*h,this.width=i,this.height=s,this.ctx.scale(h,h)}get canvasId(){return this._canvasId}get ctx(){return this.context}clear(){this.context.clearRect(0,0,this.width,this.height)}isLinked(){var t,e;return(e=(t=this.type)===null||t===void 0?void 0:t.linked)!==null&&e!==void 0?e:!1}fireDraw(){this.eventBus.fireDraw([this.canvasId])}updateCanvasWidthHeight(t,e=this.getChartResizerElement().getBoundingClientRect()){t.clientWidth!==this.width&&(t.width=t.clientWidth,this.width=t.clientWidth);const i=e.height;i!==this.height&&(t.style.height=i+"px",this.height=i,t.height=i,this.prevHeight=i)}getChartResizerElement(){var t;return(t=this.resizer)!==null&&t!==void 0?t:this.parent}isReady(){return this.width>MIN_SUPPORTED_CANVAS_SIZE.width&&this.height>MIN_SUPPORTED_CANVAS_SIZE.height}}const l={name:"candle"},c={name:"candle"},g={name:"line",linked:!0},u={name:"area",linked:!0},p={candle:l,bar:c,line:g,area:u};export function createMainCanvasModel(n,t,e,i,s,h,r){var d;const a=createCanvasModel(n,t,s,h,r,e);return a.type=(d=p[i])!==null&&d!==void 0?d:l,a}export function createCanvasModel(n,t,e,i,s,h){const r=new CanvasModel(n,t,i,s,h);return initCanvasWithConfig(r,e),r}export function initCanvasWithConfig(n,t){const e=n.canvas;t.fixedSize&&(e.width=t.fixedSize.width,e.height=t.fixedSize.height,e.style.width=t.fixedSize.width+"px",e.style.height=t.fixedSize.height+"px",n.width=t.fixedSize.width,n.height=t.fixedSize.height),e.style.position="absolute",e.style.top="0",e.style.left="0",e.style.direction="ltr"}
