/*
 * Copyright (C) 2002 - 2023 Devexperts LLC
 * This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
 * If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */
import{ChartBaseElement as u}from"../../chart-base-element";import{CanvasElement as a}from"../../canvas/canvas-bounds-container";import{DragNDropXComponent as p}from"../dran-n-drop_helper/drag-n-drop-x.component";export class XAxisScaleHandler extends u{constructor(t,n,e,o,h){super(),this.scaleModel=t,this.canvasInputListener=n,this.canvasBoundsContainer=e,this.chartPanComponent=o,this.chartModel=h,this.lastXStart=0,this.lastXWidth=0,this.lastXPxWidth=0,this.onXDragStart=()=>{this.lastXStart=this.scaleModel.xStart,this.lastXWidth=this.scaleModel.xEnd-this.scaleModel.xStart;const s=this.canvasBoundsContainer.getBounds(a.X_AXIS);this.lastXPxWidth=s.width-this.canvasInputListener.currentPoint.x},this.onXDragTick=s=>{const{delta:d}=s,i=this.lastXPxWidth-d;if(i<0)return;const c=this.lastXPxWidth/i,l=this.lastXWidth*c,X=this.lastXStart+(this.lastXWidth-l);this.scaleModel.setXScale(X,this.scaleModel.xEnd)};const r=new p(this.canvasBoundsContainer.getBoundsHitTest(a.X_AXIS),{onDragStart:this.onXDragStart,onDragTick:this.onXDragTick},this.canvasInputListener,this.chartPanComponent,{disableChartPanning:!1});this.addChildEntity(r)}doActivate(){super.doActivate(),this.addRxSubscription(this.canvasInputListener.observeDbClick(this.canvasBoundsContainer.getBoundsHitTest(a.X_AXIS)).subscribe(()=>this.chartModel.doBasicScale())),this.addRxSubscription(this.chartModel.candlesPrependSubject.subscribe(t=>this.lastXStart+=t))}}
