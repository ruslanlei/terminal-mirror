/*
 * Copyright (C) 2002 - 2023 Devexperts LLC
 * This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
 * If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */
import{ChartBaseElement as T}from"../../chart-base-element";import{CHART_UUID as c,CanvasElement as m}from"../../canvas/canvas-bounds-container";import{BackgroundDrawer as M}from"../../drawers/chart-background.drawer";import{DataSeriesDrawer as v}from"../../drawers/data-series.drawer";import{DrawerType as d,HIT_TEST_PREFIX as I}from"../../drawers/drawing-manager";import{HTDataSeriesDrawer as y}from"../../drawers/ht-data-series.drawer";import{AreaDrawer as E}from"../../drawers/chart-type-drawers/area.drawer";import{BarDrawer as A}from"../../drawers/chart-type-drawers/bar.drawer";import{BaselineDrawer as b}from"../../drawers/chart-type-drawers/baseline.drawer";import{CandleDrawer as P}from"../../drawers/chart-type-drawers/candle.drawer";import{HistogramDrawer as _}from"../../drawers/chart-type-drawers/histogram.drawer";import{LineDrawer as L}from"../../drawers/chart-type-drawers/line.drawer";import{ScatterPlotDrawer as B}from"../../drawers/chart-type-drawers/scatter-plot.drawer";import{CandleSeriesWrapper as N}from"../../drawers/data-series-drawers/candle-series-wrapper";import{ColorCandleDrawer as O}from"../../drawers/data-series-drawers/color-candle.drawer";import{DifferenceCloudDrawer as R}from"../../drawers/data-series-drawers/difference-cloud.drawer";import{HistogramDrawer as x}from"../../drawers/data-series-drawers/histogram.drawer";import{LinearDrawer as U}from"../../drawers/data-series-drawers/linear.drawer";import{PointsDrawer as H}from"../../drawers/data-series-drawers/points.drawer";import{TextDrawer as F}from"../../drawers/data-series-drawers/text.drawer";import{TriangleDrawer as k}from"../../drawers/data-series-drawers/triangle.drawer";import{BaselineModel as V}from"../../model/baseline.model";import{PriceIncrementsUtils as D}from"../../utils/priceIncrements.utils";import{keys as W}from"../../utils/utils-index";import{deleteCandlesIndex as X}from"./candle.functions";import{defaultCandleTransformer as G,hollowCandleTransformer as j,trendCandleTransformer as K}from"./candle-transformer.functions";export class ChartInstrument{constructor(){this.symbol="MOCK",this.priceIncrements=[.01]}}export class ChartComponent extends T{constructor(e,r,t,a,i,s,n,C,w,f,h,l){super(),this.chartModel=e,this.canvasModel=r,this.config=t,this.scaleModel=a,this.canvasBoundsContainer=i,this.drawingManager=s,this.hitTestCanvasModel=n,this.canvasInputListener=C,this.dataSeriesDrawers={},this.strToBarType=S=>{var o;return(o=this.barTypeValues.find(g=>g===S))!==null&&o!==void 0?o:"candle"},this.addChildEntity(this.chartModel),this.registerDefaultCandlesTransformers(),this.baselineModel=new V(this.chartModel,f,this.canvasModel,this.canvasInputListener,this.config,this.canvasBoundsContainer,l),this.addChildEntity(this.baselineModel);const u=new y(this.dataSeriesDrawers,this.hitTestCanvasModel,h);this.drawingManager.addDrawerBefore(u,I+"DATA_SERIES",d.HIT_TEST_EVENTS),this.dataSeriesDrawer=new v(h,r,this.dataSeriesDrawers),this.drawingManager.addDrawer(this.dataSeriesDrawer,d.DATA_SERIES),this.registerDefaultDataSeriesDrawers(),this.backgroundDrawer=new M(w,this.config),s.addDrawer(this.backgroundDrawer,d.MAIN_BACKGROUND),l.addCursorForCanvasEl(m.PANE_UUID(c),t.components.chart.cursor)}doActivate(){super.doActivate()}registerDefaultCandlesTransformers(){this.registerCandlesTransformer("candle",G),this.registerCandlesTransformer("trend",K),this.registerCandlesTransformer("hollow",j)}get barTypeValues(){return W(this.dataSeriesDrawers)}registerCandlesTransformer(e,r){this.chartModel.registerCandlesTransformer(e,r)}registerLastCandleLabelHandler(e,r){this.chartModel.registerLastCandleLabelHandler(e,r)}registerCandlesWidthCalculator(e,r){this.chartModel.registerCandlesWidthCalculator(e,r)}registerDefaultDataSeriesDrawers(){const e=new P(this.config.components.chart);this.registerDataSeriesTypeDrawer("candle",e),this.registerDataSeriesTypeDrawer("trend",e),this.registerDataSeriesTypeDrawer("hollow",e),this.registerDataSeriesTypeDrawer("bar",new A(this.config.components.chart)),this.registerDataSeriesTypeDrawer("line",new L(this.config.components.chart)),this.registerDataSeriesTypeDrawer("scatterPlot",new B(this.config.colors.scatterPlot)),this.registerDataSeriesTypeDrawer("area",new E(this.config.components.chart)),this.registerDataSeriesTypeDrawer("baseline",new b(this.baselineModel,this.canvasBoundsContainer)),this.registerDataSeriesTypeDrawer("histogram",new _(this.config.components.chart.histogram));const r=()=>this.canvasBoundsContainer.getBounds(m.PANE_UUID(c));this.registerDataSeriesTypeDrawer("LINEAR",new U),this.registerDataSeriesTypeDrawer("HISTOGRAM",new x),this.registerDataSeriesTypeDrawer("POINTS",new H),this.registerDataSeriesTypeDrawer("COLOR_CANDLE",new N(new O(this.chartModel),this.config,r)),this.registerDataSeriesTypeDrawer("TEXT",new F(this.config)),this.registerDataSeriesTypeDrawer("TRIANGLE",new k),this.registerDataSeriesTypeDrawer("DIFFERENCE",new R)}setChartType(e){this.config.components.chart.type=e,this.chartModel.rememberCurrentTimeframe(),this.chartModel.mainCandleSeries.config.type=e,this.chartModel.mainCandleSeries.updateCandleSeriesColors(Object.assign({},this.config.colors)),this.chartModel.mainCandleSeries.recalculateVisualPoints(),this.chartModel.chartTypeChanged.next(e),this.canvasModel.fireDraw()}resetChartScale(){this.chartModel.doBasicScale()}setShowWicks(e){this.config.components.chart.showWicks=e,this.canvasModel.fireDraw()}setMainSeries(e){var r;const t=(r=e.instrument)!==null&&r!==void 0?r:this.chartModel.mainCandleSeries.instrument;this.chartModel.mainCandleSeries.instrument=t,this.chartModel.setAllSeries({candles:e.candles,instrument:t},this.chartModel.getSecondarySeries().map(a=>{var i;const s=(i=a.instrument)!==null&&i!==void 0?i:this.chartModel.mainCandleSeries.instrument,n=a.dataPoints;return X(n),{candles:n,instrument:s}})),this.updatePriceIncrementsIfNeeded(t)}setSecondarySeries(e){var r;const t=(r=e.instrument)!==null&&r!==void 0?r:this.chartModel.mainCandleSeries.instrument,a=this.chartModel.setSecondaryCandleSeries(e.candles,t);if(this.updatePriceIncrementsIfNeeded(t),a)return a}setAllSeries(e,r){var t;const a=(t=e.instrument)!==null&&t!==void 0?t:this.chartModel.mainCandleSeries.instrument;this.updatePriceIncrementsIfNeeded(a),r.forEach(i=>{var s;const n=(s=i.instrument)!==null&&s!==void 0?s:this.chartModel.mainCandleSeries.instrument;this.updatePriceIncrementsIfNeeded(n)}),this.chartModel.setAllSeries(e,r)}toXFromCandleIndex(e){return this.chartModel.toX(e)}toXFromTimestamp(e){return this.chartModel.candleFromTimestamp(e).xCenter(this.chartModel.scaleModel)}toY(e){return this.chartModel.toY(e)}updateAllSeries(e,r){this.chartModel.updateAllSeries(e,r),this.canvasModel.fireDraw()}removeSecondarySeries(e){this.chartModel.removeSecondaryCandleSeries(e)}prependCandles(e,r){this.chartModel.prependCandles(e,r)}addLastCandle(e,r){this.chartModel.addLastCandle(e,r)}updateLastCandle(e,r){this.chartModel.updateLastCandle(e,r)}updateCandles(e,r){this.chartModel.updateCandles(e,r)}setOffsets(e){this.chartModel.setOffsets(e)}getDataSeriesDrawer(e){return this.dataSeriesDrawers[e]}registerDataSeriesTypeDrawer(e,r){this.dataSeriesDrawers[e]=r}updatePriceIncrementsIfNeeded(e){(!e.priceIncrements||!D.validatePriceIncrementsOrPrecisions(e.priceIncrements))&&(e.priceIncrements=[D.autoDetectIncrementOfValueRange(this.scaleModel.yEnd-this.scaleModel.yStart)])}observeOffsetsChanged(){return this.chartModel.offsetsChanged}observeChartTypeChanged(){return this.chartModel.chartTypeChanged}observeCandlesChanged(){return this.chartModel.observeCandlesChanged()}observeCandlesUpdated(){return this.chartModel.candlesUpdatedSubject}}
