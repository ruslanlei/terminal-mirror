/*
 * Copyright (C) 2002 - 2023 Devexperts LLC
 * This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
 * If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */
import{unitToPixels as m}from"../../model/scaling/viewport.model";import{fakeVisualCandle as g}from"../chart/fake-candles";import{mapCandlesToWeightedPoints as u,generateWeightsMapForConfig as n}from"./time/x-axis-weights.generator";import{getWeightFromTimeFormat as f,groupLabelsByWeight as C,filterMapGroupedLabelsByCoverUpLevel as F}from"./time/x-axis-weights.functions";import{typedEntries_UNSAFE as d}from"../../utils/object.utils";import{parseTimeFormatsFromKey as b}from"./time/parser/time-formats-parser.functions";export class XAxisTimeLabelsGenerator{get labels(){var e,i;return(i=(e=this.weightedCache)===null||e===void 0?void 0:e.labels)!==null&&i!==void 0?i:[]}constructor(e,i,s,a,t){this.eventBus=e,this.config=i,this.chartModel=s,this.scaleModel=a,this.timeZoneModel=t,this.labelsGroupedByWeight={},this.levelsCache={},this.weightToTimeFormatMatcherDict={},this.weightToTimeFormatsDict={},this.extendedLabelsFilterConfig={minute_1:h=>h>=2},this.formatsByWeightMap=i.components.xAxis.formatsForLabelsConfig;const{weightToTimeFormatsDict:r,weightToTimeFormatMatcherDict:o}=n(this.formatsByWeightMap);this.weightToTimeFormatMatcherDict=o,this.weightToTimeFormatsDict=r}getAllCandlesWithFake(){const e=this.chartModel.mainCandleSeries.visualPoints;if(e.length===0)return[];const s=Array.from({length:750}).map((a,t)=>g(this.chartModel.mainCandleSeries,e.length+t,this.chartModel.getPeriod()));return[...e,...s]}mapWeightedPointsToLabels(e,i){return e.reduce((s,a,t)=>{var r,o;if(a.weight===null)return s;const h=i[t],l=this.weightToTimeFormatsDict[a.weight],c=l!==void 0?this.timeZoneModel.getFormatterFactory()(l)(h.candle.timestamp):"";return s.concat({weight:a.weight,idx:(r=h.candle.idx)!==null&&r!==void 0?r:0,value:h.centerUnit,time:(o=h.candle.timestamp)!==null&&o!==void 0?o:0,text:c})},[])}setFormatsForLabelsConfig(e){const{weightToTimeFormatsDict:i,weightToTimeFormatMatcherDict:s}=n(e);this.formatsByWeightMap=e,this.weightToTimeFormatMatcherDict=s,this.weightToTimeFormatsDict=i,this.generateWeightedLabels(),this.eventBus.fireDraw()}generateWeightedLabels(){const e=this.getAllCandlesWithFake(),i=u(e,this.weightToTimeFormatMatcherDict,this.timeZoneModel.tzOffset(this.config.timezone)),s=this.mapWeightedPointsToLabels(i,e);this.labelsGroupedByWeight=C(s),this.weightedCache=void 0,this.levelsCache={},this.recalculateCachedLabels()}getLabelsFromCache(e){if(this.levelsCache[e])return this.levelsCache[e]}generateLabels(){this.generateWeightedLabels()}recalculateLabels(){this.recalculateCachedLabels()}recalculateCachedLabels(){if(Object.getOwnPropertyNames(this.labelsGroupedByWeight).length===0)return;const e=this.config.components.xAxis.fontSize,i=Object.values(this.formatsByWeightMap).reduce((r,o)=>Math.max(o.length,r),1),s=e*i,a=m(this.chartModel.mainCandleSeries.meanCandleWidth,this.scaleModel.zoomX),t=Math.round(s/a);if(!(t<0)&&(this.weightedCache===void 0||t!==this.weightedCache.coverUpLevel)){const r=this.getLabelsFromCache(t);if(r){this.weightedCache={labels:r,coverUpLevel:t};return}const o=F(this.filterLabelsByExtendedRules(this.labelsGroupedByWeight,t),t);this.levelsCache[t]=o,this.weightedCache={labels:o,coverUpLevel:t}}}filterLabelsByExtendedRules(e,i){const s=d(this.extendedLabelsFilterConfig).reduce((a,t)=>{if(!t)return a;const[r,o]=t;if(o){const h=b(r);if(h){const l=f(h);a[l]=o}}return a},{});return d(e).reduce((a,[t,r])=>(s[t]&&s[t](i)||(a[t]=r),a),{})}}
