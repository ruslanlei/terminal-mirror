{"version":3,"file":"useLocalValue.js","sources":["../../../../hooks/useLocalValue.ts"],"sourcesContent":["import { computed } from 'vue';\n\nexport const useLocalValue = <T>(\n  props: Record<any, any>,\n  emit: any,\n  field: string = 'modelValue',\n) => {\n  const event = `update:${field}`;\n\n  return computed<T>({\n    get: () => props[field],\n    set: (value: T) => emit(event, value),\n  });\n};\n"],"names":["useLocalValue","props","emit","field","event","computed","value"],"mappings":";AAEO,MAAMA,IAAgB,CAC3BC,GACAC,GACAC,IAAgB,iBACb;AACH,QAAMC,IAAQ,UAAUD;AAExB,SAAOE,EAAY;AAAA,IACjB,KAAK,MAAMJ,EAAME,CAAK;AAAA,IACtB,KAAK,CAACG,MAAaJ,EAAKE,GAAOE,CAAK;AAAA,EAAA,CACrC;AACH;"}