/*
 * Copyright (C) 2002 - 2023 Devexperts LLC
 * This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
 * If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */
import{Subject as P}from"rxjs";import{CHART_UUID as h,CanvasElement as a}from"../../canvas/canvas-bounds-container";import{ChartBaseElement as E}from"../../model/chart-base-element";import{defaultValueFormatter as S}from"../../model/data-series.model";import{SyncedByXScaleModel as _}from"../../model/scale.model";import{uuid as B}from"../../utils/uuid.utils";import{cloneUnsafe as I}from"../../utils/object.utils";import{createCandlesOffsetProvider as U,createHighLowOffsetCalculator as w}from"../chart/data-series.high-low-provider";import{GridComponent as D}from"../grid/grid.component";import{BarResizerComponent as b}from"../resizer/bar-resizer.component";import{NumericYAxisLabelsGenerator as H}from"../y_axis/numeric-y-axis-labels.generator";import{YAxisScaleHandler as x}from"../y_axis/y-axis-scale.handler";import{YAxisDrawer as N}from"../y_axis/y-axis.drawer";import{PaneHitTestController as R}from"./pane-hit-test.controller";import{PaneComponent as f,createDefaultPaneHighLowProvider as A}from"./pane.component";export class PaneManager extends E{get panesOrder(){return this.canvasBoundsContainer.panesOrder}constructor(e,n,s,t,r,o,l,i,d,m,C,p,u,c){super(),this.chartBaseModel=e,this.userInputListenerComponents=n,this.eventBus=s,this.mainScaleModel=t,this.canvasBoundsContainer=r,this.config=o,this.canvasAnimation=l,this.canvasInputListener=i,this.drawingManager=d,this.dataSeriesCanvasModel=m,this.cursorHandler=C,this.crossEventProducer=p,this.chartPanComponent=u,this.mainCanvasModel=c,this.paneComponents={},this.panesChangedSubject=new P,this.hitTestController=new R(this.paneComponents,this.dataSeriesCanvasModel),this.paneComponents[h]=new f(e,o,s,this.canvasBoundsContainer,h,t,void 0,void 0,void 0,this.hitTestController,this.dataSeriesCanvasModel),t.autoScaleModel.setHighLowProvider("series",A(this.paneComponents[h]));const v=w(()=>this.mainScaleModel.getOffsets());t.autoScaleModel.setHighLowPostProcessor("offsets",v),this.canvasBoundsContainer.addPaneBounds(h),this.addResizer(h).activate(),this.addCursors(h),this.addRxSubscription(this.crossEventProducer.subscribeMouseOver(h,[a.PANE_UUID(h)],{extensionY:-this.config.components.paneResizer.dragZone})),this.panesChangedSubject.next(this.paneComponents)}addResizer(e){const n=this.canvasBoundsContainer.getBoundsHitTest(a.PANE_UUID_RESIZER(e),{extensionY:this.config.components.paneResizer.dragZone}),s=()=>{this.canvasBoundsContainer.resizePaneVertically(e,this.canvasInputListener.getCurrentPoint().y),this.eventBus.fireDraw([this.dataSeriesCanvasModel.canvasId,"overDataSeriesCanvas"])},t=a.PANE_UUID_RESIZER(e),r=new b(t,()=>this.canvasBoundsContainer.getBounds(t),n,s,this.chartPanComponent,this.dataSeriesCanvasModel,this.drawingManager,this.canvasInputListener,this.canvasAnimation,this.config,this.canvasBoundsContainer);return this.userInputListenerComponents.push(r),r}createPane(e=B(),n){var s,t,r;if(this.paneComponents[e]!==void 0)return this.paneComponents[e];const o=[],l=()=>this.canvasBoundsContainer.getBounds(a.PANE_UUID(e)),i=(s=n==null?void 0:n.scaleModel)!==null&&s!==void 0?s:new _(this.mainScaleModel,this.config,l,this.canvasAnimation);this.canvasBoundsContainer.addPaneBounds(e,n==null?void 0:n.order),o.push(()=>this.canvasBoundsContainer.removedPaneBounds(e));const d=(t=n==null?void 0:n.paneFormatters)!==null&&t!==void 0?t:{regular:S},[m,C,p]=this.createYAxisComponent(e,i,d.regular,o,(n==null?void 0:n.increment)||null),u=this.createGridComponent(e,i,m);this.createYPanHandler(e,i,o);const c=new f(this.chartBaseModel,this.config,this.eventBus,this.canvasBoundsContainer,e,i,m,C,p,this.hitTestController,this.dataSeriesCanvasModel,o);c.addChildEntity(i),c.setPaneValueFormatters(d),c.addChildEntity(p),c.addChildEntity(u),this.config.components.paneResizer.visible&&c.addChildEntity(this.addResizer(e)),((r=n==null?void 0:n.useDefaultHighLow)!==null&&r!==void 0?r:!0)&&i.autoScaleModel.setHighLowProvider("default",U(()=>({top:10,bottom:10,left:0,right:0,visible:!0}),A(c))),this.addCursors(e),o.push(()=>this.removeCursors(e));const g=this.crossEventProducer.subscribeMouseOverHT(e,c.ht);return o.push(()=>g.unsubscribe()),this.paneComponents[e]=c,c.activate(),this.recalculateState(),i.autoScale(!0),this.panesChangedSubject.next(this.paneComponents),c}removePane(e){const n=this.paneComponents[e];n!==void 0&&(n.subs.forEach(s=>s()),n.disable(),n.dataSeries.forEach(s=>s.deactivate()),delete this.paneComponents[e],this.recalculateState(),this.panesChangedSubject.next(this.paneComponents))}createYAxisComponent(e,n,s,t,r){const o=new H(r,void 0,n,s,()=>"regular",()=>1),l=new N(this.config,this.config.components.yAxis,this.dataSeriesCanvasModel,()=>o.generateNumericLabels(),()=>this.canvasBoundsContainer.getBounds(a.PANE_UUID_Y_AXIS(e)),()=>this.config.components.yAxis.visible,n.toY.bind(n));this.drawingManager.addDrawerAfter(l,a.PANE_UUID_Y_AXIS(e),"Y_AXIS"),t.push(()=>this.drawingManager.removeDrawerByName(a.PANE_UUID_Y_AXIS(e)));const i=I(this.config.components.yAxis);i.type="regular";const d=new x(this.eventBus,i,this.chartPanComponent,n,this.canvasInputListener,this.canvasBoundsContainer,this.canvasBoundsContainer.getBoundsHitTest(a.PANE_UUID_Y_AXIS(e)),m=>n.autoScale(m));return this.userInputListenerComponents.push(d),[o,l,d]}createYPanHandler(e,n,s){const t=this.chartPanComponent.chartAreaPanHandler.registerChartYPanHandler(n,this.canvasBoundsContainer.getBoundsHitTest(a.PANE_UUID(e)));s.push(()=>{this.chartPanComponent.chartAreaPanHandler.removeChildEntity(t),t.disable()})}createGridComponent(e,n,s){return new D(this.mainCanvasModel,n,this.config,`PANE_${e}_grid_drawer`,this.drawingManager,()=>this.canvasBoundsContainer.getBounds(a.PANE_UUID(e)),()=>this.canvasBoundsContainer.getBounds(a.PANE_UUID(e)),()=>[],()=>s.generateNumericLabels())}addCursors(e,n=this.config.components.chart.cursor){const s=a.PANE_UUID(e),t=a.PANE_UUID_Y_AXIS(e),r=a.PANE_UUID_RESIZER(e);this.cursorHandler.addCursorForCanvasEl(s,n),this.config.components.paneResizer.visible&&this.cursorHandler.addCursorForCanvasEl(r,this.config.components.paneResizer.cursor,this.config.components.paneResizer.dragZone),this.cursorHandler.addCursorForCanvasEl(t,this.config.components.yAxis.cursor)}removeCursors(e){const n=a.PANE_UUID(e),s=a.PANE_UUID_Y_AXIS(e),t=a.PANE_UUID_RESIZER(e);this.cursorHandler.removeCursorForCanvasEl(n),this.cursorHandler.removeCursorForCanvasEl(t),this.cursorHandler.removeCursorForCanvasEl(s)}recalculateState(){Object.values(this.paneComponents).forEach(e=>e.scaleModel.recalculateZoomY()),this.eventBus.fireDraw([this.dataSeriesCanvasModel.canvasId,"overDataSeriesCanvas"])}}
