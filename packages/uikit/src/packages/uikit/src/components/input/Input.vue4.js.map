{"version":3,"file":"Input.vue4.js","sources":["../../../../../components/input/Input.vue"],"sourcesContent":["<template>\n  <label\n    :class=\"[\n      $style[size],\n      ...computedState,\n      isDisabled && $style.disabled,\n      !!error && $style.error,\n      isFocused && $style.focus,\n    ]\"\n  >\n    <span\n      v-if=\"('label' in $slots) || label\"\n      :class=\"$style.label\"\n    >\n      <slot name=\"label\">\n        {{ label }}\n      </slot>\n    </span>\n    <div :class=\"$style.field\">\n      <div\n        v-if=\"'prepend' in $slots\"\n        :class=\"$style.prepend\"\n      >\n        <slot name=\"prepend\" />\n      </div>\n      <input\n        ref=\"input\"\n        v-model=\"localValue\"\n        v-mask=\"mask\"\n        :tabindex=\"computedTabIndex\"\n        :type=\"computedType\"\n        :autocomplete=\"autocomplete\"\n        :inputmode=\"inputmode\"\n        :placeholder=\"placeholder\"\n        @input=\"onInput\"\n        @focus=\"onFocus\"\n        @blur=\"onBlur\"\n      >\n      <div v-if=\"type === 'password'\">\n        <Transition\n          name=\"inputPasswordIcon\"\n          mode=\"out-in\"\n        >\n          <button\n            :key=\"isPasswordVisible\"\n            :class=\"$style.passwordVisibilityButton\"\n            type=\"button\"\n            :tabindex=\"-1\"\n            @click=\"togglePassword\"\n          >\n            <Icon\n              :icon=\"isPasswordVisible ? 'eyeOpen' : 'eyeClose'\"\n            />\n          </button>\n        </Transition>\n      </div>\n      <div\n        v-if=\"'append' in $slots\"\n        :class=\"$style.append\"\n      >\n        <slot name=\"append\" />\n      </div>\n    </div>\n    <FieldError\n      :text=\"error\"\n      :class=\"$style.errorMessage\"\n      :offset=\"6\"\n      :size=\"size\"\n      :show-icon=\"showErrorIcon\"\n    />\n  </label>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, nextTick, ref } from 'vue';\nimport { useInput } from '@/hooks/useInput';\nimport FieldError from '@/components/fieldError/FieldError.vue';\nimport Icon from '@/components/icon/Icon.vue';\nimport { useComputedState } from '@/hooks/useComputedState';\nimport {\n  inputType,\n  InputProps,\n  InputEmits,\n} from './index';\n\nconst props = withDefaults(\n  defineProps<InputProps>(),\n  {\n    modelValue: '',\n    name: undefined,\n    label: undefined,\n    placeholder: undefined,\n    isDisabled: false,\n    tabIndex: 0,\n    disableTabNavigation: false,\n    type: 'text' as inputType.TEXT,\n    autocomplete: undefined,\n    inputmode: undefined,\n    state: 'defaultColor',\n    size: 'lg',\n    showErrorIcon: true,\n  },\n);\n\nconst emit = defineEmits<InputEmits>();\n\nconst {\n  localValue,\n  isPasswordVisible,\n  togglePassword,\n  computedType,\n  onInput,\n  isFocused,\n  onFocus,\n  onBlur,\n} = useInput(props, emit);\n\nconst input = ref<HTMLElement | null>(null);\nconst computedTabIndex = computed(\n  () => ((props.disableTabNavigation || props.isDisabled) ? -1 : props.tabIndex),\n);\n\nconst computedState = useComputedState(props);\n\nconst focus = async () => {\n  await nextTick();\n  input.value?.focus?.();\n};\n\ndefineExpose({\n  focus,\n  togglePassword,\n  isPasswordVisible,\n});\n</script>\n\n<style lang=\"scss\" module>\n@import \"src/assets/styles/utils\";\n\n// states\n.defaultColor {\n  -webkit-appearance: none;\n  &.focus {\n    .field {\n      border: 1px solid rgb(var(--color-accent-1));\n    }\n  }\n  .label {\n    color: rgba(var(--color-primary-1), 1);\n  }\n  .field {\n    color: rgba(var(--color-accent-1), 1);\n    border: 1px solid rgb(var(--color-accent-2));\n    transition: .15s border-color;\n    @include text;\n    font-weight: 500;\n    & > input {\n      &::placeholder {\n        color: rgba(var(--color-accent-2), 1);\n        font-weight: 500;\n      }\n    }\n    &:hover {\n      border: 1px solid rgb(var(--color-accent-1));\n    }\n  }\n}\n\n.secondary2Color {\n  .prepend, .append {\n    color: rgb(var(--color-accent-2));\n    transition: color 200ms;\n  }\n  &.focus {\n    .field {\n    }\n    .prepend, .append {\n      color: rgb(var(--color-accent-1));\n    }\n  }\n  .label {\n    color: rgba(var(--color-primary-1), 1);\n  }\n  .field {\n    color: rgba(var(--color-accent-1), 1);\n    background-color: rgb(var(--color-background-2));\n    transition: .15s border-color;\n    @include text;\n    font-weight: 500;\n    & > input {\n      &::placeholder {\n        color: rgba(var(--color-accent-2), 1);\n        font-weight: 500;\n      }\n    }\n    &:hover {\n    }\n  }\n}\n\n// sizes\n.lg {\n  .label {\n    & + .field {\n      margin-top: 6px;\n    }\n  }\n\n  .field {\n    border-radius: 10px;\n    & > input {\n      padding: 18px 20px;\n    }\n  }\n\n  .passwordVisibilityButton {\n    margin-right: 20px;\n  }\n\n  .errorMessage {\n    @include text;\n  }\n}\n\n.md {\n  .label {\n    & + .field {\n      margin-top: 6px;\n    }\n  }\n\n  .field {\n    border-radius: 10px;\n    & > input {\n      padding: 9px;\n    }\n    & > input, .append {\n      @include title3;\n    }\n  }\n\n  .errorMessage {\n  }\n}\n\n.sm {\n  .label {\n    & + .field {\n      margin-top: 6px;\n    }\n  }\n\n  .field {\n    border-radius: 5px;\n    & > input {\n      padding: 7px 10px;\n    }\n    & > input, .append {\n      @include title4;\n    }\n  }\n}\n\n// default styles\n.root {\n  display: block;\n  &.error {\n    .label {\n      color: rgba(var(--color-danger), 1);\n    }\n    .field {\n      border: 1px solid rgba(var(--color-danger), 1);\n      & > input {\n        &::placeholder {\n          color: rgba(var(--color-danger), 1);\n        }\n        color: rgba(var(--color-danger), 1);\n      }\n    }\n  }\n}\n\n.field {\n  width: 100%;\n  transition: .15s box-shadow;\n  display: flex;\n  align-items: center;\n  & > input {\n    height: 100%;\n    width: 100%;\n  }\n}\n\n.prepend {\n  margin-left: 10px;\n}\n\n.append {\n  margin-right: 10px;\n}\n\n.error {\n  &.focus {\n    .field {\n      border-color: rgba(var(--color-danger-2), 1);\n      color: rgba(var(--color-danger-2), 1);\n      & > input {\n        &::placeholder {\n          color: rgba(var(--color-danger-2), 1);\n        }\n      }\n    }\n  }\n  .field {\n    border: 1px solid rgba(var(--color-danger-2), 1);\n    &:hover {\n      border-color: rgba(var(--color-danger-2), 1);\n    }\n    & > input {\n      &::placeholder {\n        color: rgba(var(--color-danger-2), 1);\n      }\n    }\n  }\n  .errorMessage {\n    color: rgb(var(--color-danger-2));\n  }\n}\n\n.passwordVisibilityButton {\n  cursor: pointer;\n}\n\n.errorMessage {}\n</style>\n\n<style lang=\"scss\">\n.inputPasswordIcon {\n  &-enter-active,\n  &-leave-active {\n    transition: opacity 80ms, transform 80ms;\n  }\n\n  &-enter-from,\n  &-leave-to {\n    opacity: 0.4;\n    transform: scale(0.8);\n  }\n}\n</style>\n"],"names":["localValue","isPasswordVisible","togglePassword","computedType","onInput","isFocused","onFocus","onBlur","useInput","props","emit","input","ref","computedTabIndex","computed","computedState","useComputedState","__expose","nextTick","_b","_a"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;iBA0GM;AAAA,MACJ,YAAAA;AAAA,MACA,mBAAAC;AAAA,MACA,gBAAAC;AAAA,MACA,cAAAC;AAAA,MACA,SAAAC;AAAA,MACA,WAAAC;AAAA,MACA,SAAAC;AAAA,MACA,QAAAC;AAAA,IAAA,IACEC,EAASC,GAAOC,CAAI,GAElBC,IAAQC,EAAwB,IAAI,GACpCC,IAAmBC;AAAA,MACvB,MAAQL,EAAM,wBAAwBA,EAAM,aAAc,KAAKA,EAAM;AAAA,IAAA,GAGjEM,IAAgBC,EAAiBP,CAAK;AAO/B,WAAAQ,EAAA;AAAA,MACX,OANY,YAAY;;AACxB,cAAMC,EAAS,IACfC,KAAAC,IAAAT,EAAM,UAAN,gBAAAS,EAAa,UAAb,QAAAD,EAAA,KAAAC;AAAA,MAAqB;AAAA,MAKrB,gBAAAlB;AAAA,MACA,mBAAAD;AAAA,IAAA,CACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}