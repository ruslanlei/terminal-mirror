/*
 * Copyright (C) 2002 - 2023 Devexperts LLC
 * This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
 * If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */
import{merge as g,Subject as v}from"rxjs";import{map as S,throttleTime as E}from"rxjs/operators";import{CanvasElement as I}from"../canvas/canvas-bounds-container";import{CanvasModel as x,initCanvasWithConfig as f}from"../drawers/canvas.model";const C=317;export const HIT_TEST_ID_RANGE={DRAWINGS:[0,199],NEWS:[200,299],DATA_SERIES:[300,2999],EVENTS:[3e3,4e3]};export class HitTestCanvasModel extends x{constructor(e,s,o,n,l,i,a,r){super(e,s,l,a,r,{willReadFrequently:!0,desynchronized:!0}),this.canvasInputListener=o,this.canvasBoundsContainer=n,this.hitTestSubscribers=[],this.eventsSubscriptions=[],this.hoverSubject=new v,this.touchStartSubject=new v,this.dblClickSubject=new v,this.rightClickSubject=new v,f(this,i),s.style.visibility="hidden",this.enableUserControls()}enableUserControls(){if(this.eventsSubscriptions.length===0){const e=this.canvasBoundsContainer.getBoundsHitTest(I.ALL_PANES),s=this.canvasInputListener.observeMouseMove().pipe(E(30)).subscribe(r=>this.eventHandler(r,"hover")),o=this.canvasInputListener.observeTouchStart().pipe(S(()=>this.canvasInputListener.currentPoint)).subscribe(r=>this.eventHandler(r,"touchstart")),n=g(this.canvasInputListener.observeMouseDown(e),this.canvasInputListener.observeTouchStart().pipe(S(()=>this.canvasInputListener.currentPoint))).subscribe(r=>this.eventHandler(r,"mousedown")),l=this.canvasInputListener.observeDbClick(e).subscribe(r=>this.eventHandler(r,"dblclick")),i=this.canvasInputListener.observeContextMenu(e).pipe(S(()=>Object.assign({},this.canvasInputListener.currentPoint))).subscribe(r=>{this.eventHandler(r,"contextmenu")}),a=this.canvasInputListener.observeWheel(e).subscribe(r=>setTimeout(()=>this.eventHandler(r,"zoom"),0));this.eventsSubscriptions.push(s,n,l,i,a,o)}}disableUserControls(){this.eventsSubscriptions.forEach(e=>e.unsubscribe()),this.eventsSubscriptions=[]}addSubscriber(e){this.hitTestSubscribers.push(e)}removeSubscriber(e){this.hitTestSubscribers=this.hitTestSubscribers.filter(s=>s===e)}idToColor(e){const s=(e*C).toString(16);return"#000000".substr(0,7-s.length)+s}colorToId(e){return e/C}observeHoverOnElement(){return this.hoverSubject.asObservable()}observeTouchStartOnElement(){return this.touchStartSubject.asObservable()}observeDblClickOnElement(){return this.dblClickSubject.asObservable()}observeRightClickOnElement(){return this.rightClickSubject.asObservable()}getPixel(e,s){const o=window.devicePixelRatio;return this.ctx.getImageData(e*o,s*o,1,1).data}resolveCursor(e){var s;const o=this.getPixel(e.x,e.y),n=this.colorToId(o[0]*65536+o[1]*256+o[2]),l=Number(n),[i]=k(this.hitTestSubscribers,l),a=i==null?void 0:i.lookup(n);return(s=i==null?void 0:i.resolveCursor)===null||s===void 0?void 0:s.call(i,e,a)}eventHandler(e,s){var o,n,l,i,a,r;const d=this.getPixel(e.x,e.y),T=this.colorToId(d[0]*65536+d[1]*256+d[2]),p=Number(T),[t,b]=k(this.hitTestSubscribers,p),c=t==null?void 0:t.lookup(T),h={point:e,model:c};switch(s){case"mousedown":c&&((o=t==null?void 0:t.onMouseDown)===null||o===void 0||o.call(t,c,e)),b.forEach(u=>u.onMouseDown&&u.onMouseDown(null,e));break;case"hover":c&&((n=t==null?void 0:t.onHover)===null||n===void 0||n.call(t,c,e)),b.forEach(u=>u.onHover&&u.onHover(null,e)),this.hoverSubject.next(h);break;case"touchstart":c&&((l=t==null?void 0:t.onTouchStart)===null||l===void 0||l.call(t,c,e)),b.forEach(u=>u.onTouchStart&&u.onTouchStart(null,e)),this.touchStartSubject.next(h);break;case"dblclick":c&&((i=t==null?void 0:t.onDblClick)===null||i===void 0||i.call(t,c,e)),this.dblClickSubject.next(h);break;case"contextmenu":c&&((a=t==null?void 0:t.onRightClick)===null||a===void 0||a.call(t,c,e)),this.rightClickSubject.next(h);break;case"zoom":c&&((r=t==null?void 0:t.onZoom)===null||r===void 0||r.call(t,c,e)),b.forEach(u=>u.onZoom&&u.onZoom(null,e));break;default:break}}}const k=(m,e)=>{let s;const o=[];return m.forEach(n=>{const[l,i]=n.getIdRange();e>=l&&e<=i?s=n:o.push(n)}),[s,o]};
