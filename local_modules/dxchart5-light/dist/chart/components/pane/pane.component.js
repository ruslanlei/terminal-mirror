/*
 * Copyright (C) 2002 - 2023 Devexperts LLC
 * This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
 * If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */
import{distinctUntilChanged as w}from"rxjs/operators";import{areBoundsChanged as B,CanvasElement as a}from"../../canvas/canvas-bounds-container";import{ChartBaseElement as C}from"../../chart-base-element";import{DataSeriesModel as D,defaultValueFormatter as P}from"../../model/data-series.model";import{mergeHighLow as S}from"../../model/scaling/auto-scale.model";import{firstOf as A,lastOf as x}from"../../utils/utils-index";import{createPaneFormatters as _}from"../chart/price.formatter";export class PaneComponent extends C{constructor(e,t,s,n,o,h,d,u,l,c,m=[],v=new Set,p={regular:P}){super(),this.config=e,this.eventBus=t,this.canvasBoundsContainer=s,this.uuid=n,this.scaleModel=o,this.yAxisLabelsGenerator=h,this.yAxisDrawer=d,this.yAxisScaleHandler=u,this.hitTestController=l,this.dataSeriesCanvasModel=c,this.subs=m,this.dataSeries=v,this.formatters=p,this._paneOrder=0,this.getYAxisBounds=()=>this.canvasBoundsContainer.getBounds(a.PANE_UUID_Y_AXIS(this.uuid)),this.valueFormatter=(f,g)=>{var i;return((i=this.formatters[this.getAxisType()])!==null&&i!==void 0?i:this.formatters.regular)(f,g)},this.ht=this.canvasBoundsContainer.getBoundsHitTest(a.PANE_UUID(n),{extensionY:-this.config.components.paneResizer.dragZone}),this.setPaneValueFormatters(_(this))}doActivate(){super.doActivate(),this.addRxSubscription(this.canvasBoundsContainer.observeBoundsChanged(a.PANE_UUID(this.uuid)).pipe(w(B)).subscribe(()=>this.scaleModel.recalculateZoomY()))}setDataPoints(e,t){this.dataSeries.has(e)&&(e.dataPoints=t,this.updateView())}updateView(){this.scaleModel.doAutoScale(),this.eventBus.fireDraw()}getBounds(){return this.scaleModel.getBounds()}hide(){this._paneOrder=this.canvasBoundsContainer.panesOrder.indexOf(this.uuid),this.canvasBoundsContainer.removedPaneBounds(this.uuid),this.eventBus.fireDraw()}show(){this.canvasBoundsContainer.addPaneBounds(this.uuid,this._paneOrder),this.eventBus.fireDraw()}createDataSeries(){return new D(this,this.hitTestController.getNewDataSeriesHitTestId())}addDataSeries(e){this.dataSeries.add(e),this.dataSeries.size===1&&(this.mainDataSeries=e),this.updateView()}removeDataSeries(e){this.dataSeries.delete(e),this.updateView()}getAxisType(){return"regular"}moveUp(){this.canvasBoundsContainer.movePaneUp(this.uuid)}moveDown(){this.canvasBoundsContainer.movePaneDown(this.uuid)}canMoveUp(){const e=A(this.canvasBoundsContainer.panesOrder);return this.uuid!==e}canMoveDown(){const e=x(this.canvasBoundsContainer.panesOrder);return this.uuid!==e}get regularFormatter(){return this.formatters.regular}setPaneValueFormatters(e){this.formatters=e}regularValueFromY(e){var t,s;return(s=(t=this.mainDataSeries)===null||t===void 0?void 0:t.view.priceFromY(e))!==null&&s!==void 0?s:this.scaleModel.fromY(e)}}export const createDefaultPaneHighLowProvider=r=>({isHighLowActive:()=>!0,calculateHighLow:e=>{const t=Array.from(r.dataSeries).filter(s=>s.highLowProvider.isHighLowActive()).map(s=>s.highLowProvider.calculateHighLow(e));return S(t)}});
