/*
 * Copyright (C) 2002 - 2023 Devexperts LLC
 * This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
 * If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */
import{merge as b}from"rxjs";import{ChartBaseElement as u}from"../../model/chart-base-element";import{calculateTextWidth as A}from"../../utils/canvas/canvas-font-measure-tool.utils";import{NumericYAxisLabelsGenerator as p}from"./numeric-y-axis-labels.generator";import{YAxisLabelsModel as m}from"./price_labels/y-axis-labels.model";import{YAxisBaseLabelsModel as L}from"./y-axis-base-labels.model";export class YAxisModel extends u{constructor(e,i,a,o,h,r,n,d){super(),this.config=o,this.canvasBoundsContainer=h,this.canvasModel=r,this.chartModel=n,this.yAxisWidthContributors=[];const x=i.valueFormatter;this.yAxisLabelsGenerator=new p(null,n,d,x,()=>this.config.components.yAxis.type,()=>this.chartModel.getBaseLine()),this.yAxisBaseLabelsModel=new L(d,this.yAxisLabelsGenerator,this.canvasBoundsContainer,()=>this.updateYAxisWidth()),this.addChildEntity(this.yAxisBaseLabelsModel),this.yAxisLabelsModel=new m(a,this.chartModel,this.canvasBoundsContainer,this.config,r,()=>this.updateYAxisWidth()),this.addChildEntity(this.yAxisLabelsModel),this.registerYAxisWidthContributor({getLargestLabel:()=>{var s;return((s=this.yAxisLabelsGenerator.labelsCache.getLastCachedValue())!==null&&s!==void 0?s:[]).map(t=>t.text).concat(this.yAxisLabelsModel.orderedLabels.flatMap(t=>t.labels).map(t=>t.labelText)).reduce((t,c)=>c.length>t.length?c:t,"")}}),this.registerYAxisWidthContributor({getLargestLabel:()=>Object.values(e.paneComponents).map(s=>{var t;return(t=s.yAxisLabelsGenerator.labelsCache.getLastCachedValue())!==null&&t!==void 0?t:[]}).flat().reduce((s,t)=>t.text.length>s.length?t.text:s,"")})}doActivate(){super.doActivate(),this.addRxSubscription(b(this.chartModel.candlesSetSubject).subscribe(()=>{this.yAxisLabelsGenerator.labelsCache.invalidate(),this.yAxisLabelsModel.updateLabels(),this.yAxisBaseLabelsModel.updateLabels(),this.canvasModel.fireDraw()}))}getTextWidth(e){const i=getFontFromConfig(this.config.components.yAxis);return A(e,this.canvasModel.ctx,i)}registerYAxisWidthContributor(e){this.yAxisWidthContributors.push(e)}updateYAxisWidth(){var e,i,a,o;const r=Math.max(...this.yAxisWidthContributors.map(n=>this.getTextWidth(n.getLargestLabel())))+((i=(e=this.config.components.yAxis.labelBoxMargin)===null||e===void 0?void 0:e.start)!==null&&i!==void 0?i:0)+((o=(a=this.config.components.yAxis.labelBoxMargin)===null||a===void 0?void 0:a.end)!==null&&o!==void 0?o:0);this.canvasBoundsContainer.setYAxisWidth(r)}}export const getFontFromConfig=l=>`${l.fontSize}px ${l.fontFamily}`;
