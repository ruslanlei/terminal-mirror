/*
 * Copyright (C) 2002 - 2023 Devexperts LLC
 * This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
 * If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */
import{CanvasBoundsContainer as l,CanvasElement as t,isInVerticalBounds as g}from"../canvas/canvas-bounds-container";import{ChartBaseElement as C}from"../chart-base-element";import{DragNDropYComponent as p}from"../components/dran-n-drop_helper/drag-n-drop-y.component";export const BASELINE_RESIZER_UUID="BASELINE_RESIZER";export class BaselineModel extends C{constructor(e,s,n,i,r,a,h){super(),this.chartModel=e,this.canvasModel=n,this.canvasInputListener=i,this.config=r,this.canvasBoundContainer=a,this.cursorHandler=h,this.resizerBounds={x:0,y:0,pageX:0,pageY:0,height:0,width:0},this.baselineYPercents=50,this.ht=l.hitTestOf(this.resizerBounds,{extensionY:this.config.components.paneResizer.dragZone}),this.dragTickCb=d=>{const{delta:u}=d,B=this.canvasBoundContainer.getBounds(t.CHART),o=this.canvasInputListener.getCurrentPoint().y;u!==0&&g(o,B)&&(this.moveBaseLine(o),this.canvasModel.fireDraw())};const c=new p(this.ht,{onDragTick:this.dragTickCb},i,s);this.addChildEntity(c)}doActivate(){super.doActivate(),this.addRxSubscription(this.canvasBoundContainer.observeBoundsChanged(t.CHART).subscribe(()=>this.recalculateBounds())),this.chartModel.chartTypeChanged.subscribe(e=>{e==="baseline"?this.cursorHandler.setCursorTypeForBounds("BASELINE_RESIZER",this.resizerBounds,this.config.components.baseline.cursor,this.config.components.baseline.dragZone):this.cursorHandler.extensionLayer.delete("BASELINE_RESIZER")})}recalculateBounds(){const e=this.canvasBoundContainer.getBounds(t.CHART),s=this.canvasBoundContainer.getBounds(t.Y_AXIS);this.resizerBounds.x=e.x,this.resizerBounds.width=e.width+s.width,this.resizerBounds.height=this.config.components.baseline.height;const n=e.y+e.height*(this.baselineYPercents/100);this.resizerBounds.y=n,this.canvasBoundContainer.bounds[BASELINE_RESIZER_UUID]=this.resizerBounds}moveBaseLine(e){const s=this.canvasBoundContainer.getBounds(t.CHART);this.baselineYPercents=(e-s.y)*100/s.height,this.resizerBounds.y=e}doDeactivate(){super.doDeactivate()}}
