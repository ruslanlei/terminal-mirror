/*
 * Copyright (C) 2002 - 2023 Devexperts LLC
 * This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
 * If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */
import{CanvasElement as g}from"../../canvas/canvas-bounds-container";import{redrawBackgroundArea as v}from"../../drawers/chart-background.drawer";const f={"rhombus-small":4,rhombus:6,"rhombus-large":8},c=(h,t)=>`${h}_${t}`;export class EventsDrawer{constructor(t,e,o,s,n,i,a){this.backgroundCanvas=t,this.canvasModel=e,this.chartModel=o,this.config=s,this.canvasBoundsContainer=n,this.model=i,this.formatterProvider=a,this.customIcons={};const r=this.config.components.events.icons;r&&(this.createCustomIcon("earnings",r.earnings),this.createCustomIcon("dividends",r.dividends),this.createCustomIcon("splits",r.splits),this.createCustomIcon("conference-calls",r.conferenceCalls))}createCustomIcon(t,e){if(e){const o=this.createIconImage(e.normal),s=this.createIconImage(e.hover);this.customIcons[c(t,"normal")]=o,this.customIcons[c(t,"hover")]=s}}createIconImage(t){var e;const s=new DOMParser().parseFromString(t,"text/html").querySelector("svg");let n=0;s&&(n=parseInt((e=s.getAttribute("height"))!==null&&e!==void 0?e:"",10));const r="data:image/svg+xml;base64,"+btoa(t),l=new Image;return l.src=r,{img:l,svgHeight:n}}draw(){if(!this.config.components.events.visible)return;const t=this.canvasBoundsContainer.getBounds(g.EVENTS),e=this.canvasBoundsContainer.getBounds(g.ALL_PANES),o=this.canvasModel.ctx;o.save(),this.model.events.filter(s=>this.config.components.events.eventsVisibility[s.type]).forEach(s=>{const n=this.chartModel.candleFromTimestamp(s.timestamp).xCenter(this.chartModel.scaleModel);if(n>e.x&&n<e.x+e.width){const i=this.config.colors.events[s.type].color;o.strokeStyle=i,this.customIcons[c(s.type,"hover")]!==void 0?this.drawCustomSvgEvent(o,n,t,s):this.drawDefaultEvent(o,n,t,s,i),this.model.hoveredEvent.getValue()===s&&(o.beginPath(),o.moveTo(n,e.y),o.lineTo(n,t.y+t.height/2),o.stroke(),o.closePath(),this.config.components.xAxis.visible&&this.drawLabel(n,s))}}),o.restore()}drawCustomSvgEvent(t,e,o,s){const n=o.y+o.height/2,i=this.customIcons[c(s.type,"normal")],a=this.customIcons[c(s.type,"hover")];this.model.hoveredEvent.getValue()===s?t.drawImage(a.img,e-a.svgHeight/2,n-a.svgHeight/2):t.drawImage(i.img,e-i.svgHeight/2,n-i.svgHeight/2)}drawDefaultEvent(t,e,o,s,n){const i=o.y+o.height/2;t.fillStyle=n,t.lineWidth=1.5;const a=getEventSize(s);t.beginPath(),t.moveTo(e-a,i),t.lineTo(e,i-a),t.lineTo(e+a,i),t.lineTo(e,i+a),t.closePath(),this.model.hoveredEvent.getValue()===s?t.fill():t.stroke()}drawLabel(t,e){var o;const s=this.canvasModel.ctx,n=this.canvasBoundsContainer.getBounds(g.X_AXIS),i=this.config.components.xAxis.fontFamily,a=this.config.components.xAxis.fontSize,r=(o=this.config.components.xAxis.padding.top)!==null&&o!==void 0?o:0,l=n.y+a-1+r;s.font=`${a}px ${i}`;const d=this.formatterProvider()(e.timestamp),m=s.measureText(d).width;v(this.backgroundCanvas.ctx,s,t-m/2,n.y+1,m,n.height-1),s.fillStyle=this.config.colors.events[e.type].color,s.fillText(d,t-m/2,l)}getCanvasIds(){return[this.canvasModel.canvasId]}}export function getEventSize(h){return f[h.style]}
