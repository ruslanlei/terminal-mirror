{"version":3,"file":"Lottie.vue.js","sources":["../../../../../components/lottie/Lottie.vue"],"sourcesContent":["<template>\n  <div ref=\"lottieContainer\" />\n</template>\n\n<script setup lang=\"ts\">\nimport {\n  onBeforeUnmount, onMounted, ref, toRefs, watch,\n} from 'vue';\nimport lottie, { AnimationItem } from 'lottie-web';\nimport { useIntersectionObserver } from '@vueuse/core';\nimport { useEnvironmentObserver } from '@/hooks/useEnvironmentObserver';\nimport { LottieEmits, LottieProps } from './index';\n\nconst props = defineProps<LottieProps>();\nconst {\n  path,\n} = toRefs(props);\n\nconst emit = defineEmits<LottieEmits>();\n\nconst lottieContainer = ref();\n\nconst animationInstance = ref<AnimationItem>();\n\nconst initAnimation = () => {\n  animationInstance.value = lottie.loadAnimation({\n    container: lottieContainer.value,\n    renderer: 'svg',\n    loop: true,\n    autoplay: true,\n    path: path.value,\n  });\n\n  animationInstance.value?.addEventListener('data_ready', () => {\n    emit('dataReady');\n  });\n\n  animationInstance.value?.pause();\n};\n\nonMounted(initAnimation);\n\nconst destroyAnimation = () => {\n  animationInstance.value?.destroy();\n};\nonBeforeUnmount(destroyAnimation);\n\nwatch(path, () => {\n  destroyAnimation();\n  initAnimation();\n});\n\nconst timer = ref();\n\nconst {\n  setListeners,\n  removeListeners,\n} = useEnvironmentObserver(lottieContainer, () => {\n  clearTimeout(timer.value);\n  animationInstance.value?.pause();\n  timer.value = setTimeout(() => {\n    animationInstance.value?.play();\n  }, 300);\n}, true);\n\nonMounted(setListeners);\nonBeforeUnmount(removeListeners);\n\nconst { stop } = useIntersectionObserver(\n  lottieContainer,\n  ([{ isIntersecting }]) => {\n    if (isIntersecting) {\n      animationInstance.value?.play();\n    } else {\n      animationInstance.value?.pause();\n    }\n  },\n);\n\nonBeforeUnmount(stop);\n</script>\n"],"names":["path","toRefs","props","lottieContainer","ref","animationInstance","initAnimation","lottie","_a","emit","_b","onMounted","destroyAnimation","onBeforeUnmount","watch","timer","setListeners","removeListeners","useEnvironmentObserver","stop","useIntersectionObserver","isIntersecting"],"mappings":";;;;;;;;;;;iBAcM;AAAA,MACJ,MAAAA;AAAA,IAAA,IACEC,EAAOC,CAAK,GAIVC,IAAkBC,KAElBC,IAAoBD,KAEpBE,IAAgB,MAAM;;AACR,MAAAD,EAAA,QAAQE,EAAO,cAAc;AAAA,QAC7C,WAAWJ,EAAgB;AAAA,QAC3B,UAAU;AAAA,QACV,MAAM;AAAA,QACN,UAAU;AAAA,QACV,MAAMH,EAAK;AAAA,MAAA,CACZ,IAEiBQ,IAAAH,EAAA,UAAA,QAAAG,EAAO,iBAAiB,cAAc,MAAM;AAC5D,QAAAC,EAAK,WAAW;AAAA,MAAA,KAGlBC,IAAAL,EAAkB,UAAlB,QAAAK,EAAyB;AAAA,IAAM;AAGjC,IAAAC,EAAUL,CAAa;AAEvB,UAAMM,IAAmB,MAAM;;AAC7B,OAAAJ,IAAAH,EAAkB,UAAlB,QAAAG,EAAyB;AAAA,IAAQ;AAEnC,IAAAK,EAAgBD,CAAgB,GAEhCE,EAAMd,GAAM,MAAM;AACC,MAAAY,KACHN;IAAA,CACf;AAED,UAAMS,IAAQX,KAER;AAAA,MACJ,cAAAY;AAAA,MACA,iBAAAC;AAAA,IAAA,IACEC,EAAuBf,GAAiB,MAAM;;AAChD,mBAAaY,EAAM,KAAK,IACxBP,IAAAH,EAAkB,UAAlB,QAAAG,EAAyB,SACnBO,EAAA,QAAQ,WAAW,MAAM;;AAC7B,SAAAP,IAAAH,EAAkB,UAAlB,QAAAG,EAAyB;AAAA,SACxB,GAAG;AAAA,OACL,EAAI;AAEP,IAAAG,EAAUK,CAAY,GACtBH,EAAgBI,CAAe;AAEzB,UAAA,EAAE,MAAAE,MAASC;AAAA,MACfjB;AAAA,MACA,CAAC,CAAC,EAAE,gBAAAkB,EAAA,CAAgB,MAAM;;AACxB,QAAIA,KACFb,IAAAH,EAAkB,UAAlB,QAAAG,EAAyB,UAEzBE,IAAAL,EAAkB,UAAlB,QAAAK,EAAyB;AAAA,MAE7B;AAAA,IAAA;AAGF,WAAAG,EAAgBM,CAAI;;;;;;"}