/*
 * Copyright (C) 2002 - 2023 Devexperts LLC
 * This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
 * If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */
import{reorderArray as c,slice2DArray as r}from"../array.functions";describe("array functions",()=>{describe("slice 2D array",()=>{it("should corrercly slice arrays with correct indexes",()=>{const t=[[1,2],[3,4]],e=r(t,1,2);expect(e.toString()).toBe([[2],[3]].toString());const o=r(t,0,1);expect(o.toString()).toBe([[1,2]].toString());const n=r(t,2,3);expect(n.toString()).toBe([[3,4]].toString());const s=r(t,0,3);expect(s.toString()).toBe([[1,2],[3,4]].toString())}),it("should corrercly slice arrays with exceeding indexes",()=>{const t=[[1,2],[3,4]],e=r(t,-2,0);expect(e.toString()).toBe([[1]].toString());const o=r(t,3,4);expect(o.toString()).toBe([[4]].toString());const n=r(t,-2,4);expect(n.toString()).toBe([[1,2],[3,4]].toString())})}),describe("reorder array",()=>{it("Reorders source array according to newOrder",()=>{const t=["1","2","3"],e=c(t,["3","1"]);expect(e.toString()).toBe(["3","2","1"].toString());const o=c(t,["3","1","2"]);expect(o.toString()).toBe(["3","1","2"].toString());const n=c(t,["3"]);expect(n.toString()).toBe(["1","2","3"].toString())}),it("should return the reordered array even if newOrder contains duplicates",()=>{const t=["1","2","3"],e=["2","1","2"];expect(c(t,e)).toEqual(["2","1","3"])}),it("should return the reordered array even if newOrder contains extra elements",()=>{const t=["1","2","3"],e=["6","2","1","5"];expect(c(t,e)).toEqual(["2","1","3"])})})});
