{"version":3,"file":"useEnvironmentObserver.js","sources":["../../../../hooks/useEnvironmentObserver.ts"],"sourcesContent":["import { MaybeComputedElementRef, useResizeObserver } from '@vueuse/core';\nimport { onBeforeUnmount, onMounted } from 'vue';\n\nexport const useEnvironmentObserver = (\n  target: MaybeComputedElementRef,\n  callback: () => any,\n  watchScroll: boolean = false,\n  watchResize: boolean = true,\n) => {\n  const {\n    stop: disconnect,\n  } = useResizeObserver(target, callback);\n\n  if (!watchResize) {\n    disconnect();\n  }\n\n  const setListeners = () => {\n    window.addEventListener('resize', callback);\n    window.addEventListener('orientationchange', callback);\n    if (watchScroll) {\n      window.addEventListener('scroll', callback);\n    }\n  };\n  const removeListeners = () => {\n    window.removeEventListener('resize', callback);\n    window.removeEventListener('orientationchange', callback);\n    if (watchScroll) {\n      window.removeEventListener('scroll', callback);\n    }\n    disconnect();\n  };\n\n  onMounted(setListeners);\n\n  onBeforeUnmount(removeListeners);\n\n  return {\n    setListeners,\n    removeListeners,\n  };\n};\n"],"names":["useResizeObserver","onMounted","onBeforeUnmount","useEnvironmentObserver","target","callback","watchScroll","watchResize","disconnect","setListeners","removeListeners"],"mappings":"AAGO,SAAA,qBAAAA,SAAA;AAAA,SAAA,aAAAC,GAAA,mBAAAC,SAAA;AAAA,MAAMC,IAAyB,CACpCC,GACAC,GACAC,IAAuB,IACvBC,IAAuB,OACpB;AACG,QAAA;AAAA,IACJ,MAAMC;AAAA,EAAA,IACJR,EAAkBI,GAAQC,CAAQ;AAEtC,EAAKE,KACQC;AAGb,QAAMC,IAAe,MAAM;AAClB,WAAA,iBAAiB,UAAUJ,CAAQ,GACnC,OAAA,iBAAiB,qBAAqBA,CAAQ,GACjDC,KACK,OAAA,iBAAiB,UAAUD,CAAQ;AAAA,EAC5C,GAEIK,IAAkB,MAAM;AACrB,WAAA,oBAAoB,UAAUL,CAAQ,GACtC,OAAA,oBAAoB,qBAAqBA,CAAQ,GACpDC,KACK,OAAA,oBAAoB,UAAUD,CAAQ,GAEpCG;EAAA;AAGb,SAAAP,EAAUQ,CAAY,GAEtBP,EAAgBQ,CAAe,GAExB;AAAA,IACL,cAAAD;AAAA,IACA,iBAAAC;AAAA,EAAA;AAEJ;"}